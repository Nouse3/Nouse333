local Configs_HUB = {
  Cor_Hub = Color3.fromRGB(15, 15, 15),
  Cor_Options = Color3.fromRGB(15, 15, 15),
  Cor_Stroke = Color3.fromRGB(60, 60, 60),
  Cor_Text = Color3.fromRGB(240, 240, 240),
  Cor_DarkText = Color3.fromRGB(140, 140, 140),
  Corner_Radius = UDim.new(0, 4),
  Text_Font = Enum.Font.FredokaOne
}

local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local function Create(instance, parent, props)
  local new = Instance.new(instance, parent)
  if props then
    table.foreach(props, function(prop, value)
      new[prop] = value
    end)
  end
  return new
end

local function SetProps(instance, props)
  if instance and props then
    table.foreach(props, function(prop, value)
      instance[prop] = value
    end)
  end
  return instance
end

local function Corner(parent, props)
  local new = Create("UICorner", parent)
  new.CornerRadius = Configs_HUB.Corner_Radius
  if props then
    SetProps(new, props)
  end
  return new
end

local function Stroke(parent, props)
  local new = Create("UIStroke", parent)
  new.Color = Configs_HUB.Cor_Stroke
  new.ApplyStrokeMode = "Border"
  if props then
    SetProps(new, props)
  end
  return new
end

local function CreateTween(instance, prop, value, time, tweenWait)
  local tween = TweenService:Create(instance,
  TweenInfo.new(time, Enum.EasingStyle.Linear),
  {[prop] = value})
  tween:Play()
  if tweenWait then
    tween.Completed:Wait()
  end
end

local function TextSetColor(instance)
  instance.MouseEnter:Connect(function()
    CreateTween(instance, "TextColor3", Color3.fromRGB(30, 140, 200), 0.4, true)
  end)
  instance.MouseLeave:Connect(function()
    CreateTween(instance, "TextColor3", Configs_HUB.Cor_Text, 0.4, false)
  end)
end

local ScreenGui = Create("ScreenGui", CoreGui, {
  Name = "REDz HUB library"
})

ScreenFind = CoreGui:FindFirstChild(ScreenGui.Name)
if ScreenFind and ScreenFind ~= ScreenGui then
  ScreenFind:Destroy()
end

function DestroyScript()
  ScreenGui:Destroy()
end

local Menu_Notifi = Create("Frame", ScreenGui, {
  Size = UDim2.new(0, 300, 1, 0),
  Position = UDim2.new(1, 0, 0, 0),
  AnchorPoint = Vector2.new(1, 0),
  BackgroundTransparency = 1
})

local Padding = Create("UIPadding", Menu_Notifi, {
  PaddingLeft = UDim.new(0, 25),
  PaddingTop = UDim.new(0, 25),
  PaddingBottom = UDim.new(0, 50)
})

local ListLayout = Create("UIListLayout", Menu_Notifi, {
  Padding = UDim.new(0, 15),
  VerticalAlignment = "Bottom"
})

function MakeNotifi(Configs)
  local Title = Configs.Title or "REDz HUB"
  local text = Configs.Text or "Notificação"
  local timewait = Configs.Time or 5
  
  local Frame1 = Create("Frame", Menu_Notifi, {
    Size = UDim2.new(2, 0, 0, 0),
    BackgroundTransparency = 1,
    AutomaticSize = "Y",
    Name = "Title"
  })
  
  local Frame2 = Create("Frame", Frame1, {
    Size = UDim2.new(0, Menu_Notifi.Size.X.Offset - 50, 0, 0),
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    Position = UDim2.new(0, Menu_Notifi.Size.X.Offset, 0, 0),
    AutomaticSize = "Y"
  })Corner(Frame2)
  
  local TextLabel = Create("TextLabel", Frame2, {
    Size = UDim2.new(1, 0, 0, 25),
    Font = Configs_HUB.Text_Font,
    BackgroundTransparency = 1,
    Text = Title,
    TextSize = 20,
    Position = UDim2.new(0, 20, 0, 5),
    TextXAlignment = "Left",
    TextColor3 = Configs_HUB.Cor_Text
  })
  
  local TextButton = Create("TextButton", Frame2, {
    Text = "X",
    Font = Configs_HUB.Text_Font,
    TextSize = 20,
    BackgroundTransparency = 1,
    TextColor3 = Color3.fromRGB(200, 200, 200),
    Position = UDim2.new(1, -5, 0, 5),
    AnchorPoint = Vector2.new(1, 0),
    Size = UDim2.new(0, 25, 0, 25)
  })
  
  local TextLabel = Create("TextLabel", Frame2, {
    Size = UDim2.new(1, -30, 0, 0),
    Position = UDim2.new(0, 20, 0, TextButton.Size.Y.Offset + 10),
    TextSize = 15,
    TextColor3 = Configs_HUB.Cor_DarkText,
    TextXAlignment = "Left",
    TextYAlignment = "Top",
    AutomaticSize = "Y",
    Text = text,
    Font = Configs_HUB.Text_Font,
    BackgroundTransparency = 1,
    AutomaticSize = Enum.AutomaticSize.Y,
    TextWrapped = true
  })
  
  local FrameSize = Create("Frame", Frame2, {
    Size = UDim2.new(1, 0, 0, 2),
    BackgroundColor3 = Configs_HUB.Cor_Stroke,
    Position = UDim2.new(0, 2, 0, 30),
    BorderSizePixel = 0
  })Corner(FrameSize)Create("Frame", Frame2, {
    Size = UDim2.new(0, 0, 0, 5),
    Position = UDim2.new(0, 0, 1, 5),
    BackgroundTransparency = 1
  })
  
  task.spawn(function()
    CreateTween(FrameSize, "Size", UDim2.new(0, 0, 0, 2), timewait, true)
  end)
  
  TextButton.MouseButton1Click:Connect(function()
    CreateTween(Frame2, "Position", UDim2.new(0, -20, 0, 0), 0.1, true)
    CreateTween(Frame2, "Position", UDim2.new(0, Menu_Notifi.Size.X.Offset, 0, 0), 0.5, true)
    Frame1:Destroy()
  end)
  
  task.spawn(function()
    CreateTween(Frame2, "Position", UDim2.new(0, -20, 0, 0), 0.5, true)
    CreateTween(Frame2, "Position", UDim2.new(), 0.1, true)task.wait(timewait)
    if Frame2 then
      CreateTween(Frame2, "Position", UDim2.new(0, -20, 0, 0), 0.1, true)
      CreateTween(Frame2, "Position", UDim2.new(0, Menu_Notifi.Size.X.Offset, 0, 0), 0.5, true)
      Frame1:Destroy()
    end
  end)
end

function MakeWindow(Configs)
  local title = Configs.Hub.Title or "REDz HUB"
  local Anim_Title = Configs.Hub.Animation or "by : redz9999"
  
  local KeySystem = Configs.Key.KeySystem or false
  local KeyTitle = Configs.Key.Title or "Key System"
  local KeyDescription = Configs.Key.Description or ".-."
  local KeyKey = Configs.Key.Keys or {"123", "321"}
  local KeyLink = Configs.Key.KeyLink or ""
  local KeyNotifications = Configs.Key.Notifi.Notifications or true
  local KeyNotSuccess = Configs.Key.Notifi.Incorrectkey or "The key is incorrect"
  local KeySuccess = Configs.Key.Notifi.CorrectKey or "Running the Script..."
  local KeyCopyKeyLink = Configs.Key.Notifi.CopyKeyLink or "Copied to Clipboard"
  
  if KeySystem then
    local KeyMenu = Create("Frame", ScreenGui, {
      Size = UDim2.new(0, 400, 0, 220),
      Position = UDim2.new(0.5, 0, 0.5, 0),
      BackgroundColor3 = Configs_HUB.Cor_Hub,
      AnchorPoint = Vector2.new(0.5, 0.5),
      Active = true,
      Draggable = true
    })Corner(KeyMenu)
    
    local CloseButton = Create("TextButton", KeyMenu, {
      Size = UDim2.new(0, 30, 0, 30),
      Position = UDim2.new(1, -10, 0, 5),
      AnchorPoint = Vector2.new(1, 0),
      Text = "X",
      Font = Enum.Font.FredokaOne,
      TextScaled = true,
      TextColor3 = Color3.fromRGB(240, 0, 0),
      BackgroundTransparency = 1,
    })Corner(CloseButton)
    
    local Title = Create("TextLabel", KeyMenu, {
      Size = UDim2.new(1, -80, 0, 20),
      Position = UDim2.new(0, 20, 0, 5),
      Text = KeyTitle,
      Font = Configs_HUB.Text_Font,
      TextScaled = true,
      TextColor3 = Configs_HUB.Cor_Text,
      TextXAlignment = "Left",
      BackgroundTransparency = 1
    })
    
    local Description = Create("TextLabel", KeyMenu, {
      Size = UDim2.new(1, -80, 0, 0),
      Text = KeyDescription,
      TextSize = 17,
      TextColor3 = Configs_HUB.Cor_DarkText,
      Font = Configs_HUB.Text_Font,
      Position = UDim2.new(0, 20, 0, 25),
      TextXAlignment = "Left",
      AutomaticSize = "Y",
      TextYAlignment = "Top",
      BackgroundTransparency = 1
    })
    
    local ConfirmButton = Create("TextButton", KeyMenu, {
      Text = "Confirm",
      Font = Configs_HUB.Text_Font,
      TextSize = 20,
      TextColor3 = Configs_HUB.Cor_Text,
      Size = UDim2.new(0, 150, 0, 40),
      AnchorPoint = Vector2.new(1, 0),
      Position = UDim2.new(1, -35, 0, 140),
      BackgroundColor3 = Configs_HUB.Cor_Options
    })Corner(ConfirmButton)
    
    local GetKeyLink = Create("TextButton", KeyMenu, {
      Text = "Get Key Link",
      Font = Configs_HUB.Text_Font,
      TextSize = 20,
      TextColor3 = Configs_HUB.Cor_Text,
      Size = UDim2.new(0, 150, 0, 40),
      Position = UDim2.new(0, 35, 0, 140),
      BackgroundColor3 = Configs_HUB.Cor_Options
    })Corner(GetKeyLink)
    
    local TextBox = Create("TextBox", KeyMenu, {
      Size = UDim2.new(1, -70, 0, 40),
      Position = UDim2.new(0, 35, 0, 90),
      BackgroundColor3 = Configs_HUB.Cor_Options,
      PlaceholderText = "Put the Key here",
      Text = "",
      TextColor3 = Configs_HUB.Cor_Text,
      Font = Configs_HUB.Text_Font,
      TextSize = 25
    })Corner(TextBox)
    
    local KeyVerify = false
    CloseButton.MouseButton1Click:Connect(function()
      local UIScale = Create("UIScale", ScreenGui)
      CreateTween(UIScale, "Scale", 0, 0.20, true)
      ScreenGui:Destroy()
    end)
    
    ConfirmButton.MouseButton1Click:Connect(function()
      for _,v in pairs(KeyKey) do
        if TextBox.Text == v then
          KeyVerify = true
        end
      end
      if KeyNotifications and not KeyVerify then
        MakeNotifi({
          Title = KeyTitle,
          Text = KeyNotSuccess,
          Time = 5
        })
      elseif KeyNotifications then
        MakeNotifi({
          Title = KeyTitle,
          Text = KeySuccess,
          Time = 5
        })
      end
    end)
    
    GetKeyLink.MouseButton1Click:Connect(function()
      if KeyNotifications then
        setclipboard(KeyLink)
        MakeNotifi({
          Title = KeyTitle,
          Text = KeyCopyKeyLink,
          Time = 5
        })
      end
    end)
    
    repeat task.wait()
    until KeyVerify
    local UIScale = Create("UIScale", KeyMenu)
    CreateTween(UIScale, "Scale", 0, 0.40, true)
    KeyMenu:Destroy()
  end
  
  local Menu = Create("Frame", ScreenGui, {
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    Position = UDim2.new(0.5, -500/2, 0.5, -270/2),
    Active = true,
    Draggable = true
  })Corner(Menu)
  
  local TopBar = Create("Frame", Menu, {
    BackgroundTransparency = 1,
    Size = UDim2.new(1, 0, 0, 25),
    Visible = false
  })
  
  local ButtonsFrame = Create("Frame", TopBar, {
    Size = UDim2.new(0, 40, 1, -5),
    Position = UDim2.new(1, -10, 0, 2.5),
    AnchorPoint = Vector2.new(1, 0),
    BackgroundTransparency = 1
  })
  
  local Title = Create("TextLabel", TopBar, {
    Size = UDim2.new(1, 0, 1, 0),
    Position = UDim2.new(0, 20, 0, 0),
    TextColor3 = Configs_HUB.Cor_Text,
    Font = Configs_HUB.Text_Font,
    TextXAlignment = "Left",
    Text = title,
    TextSize = 20,
    BackgroundTransparency = 1
  })
  
  local Minimize_BTN = Create("TextButton", ButtonsFrame, {
    Text = "-",
    TextColor3 = Configs_HUB.Cor_Text,
    Size = UDim2.new(0.5, 0, 1, 0),
    BackgroundTransparency = 1,
    Font = Configs_HUB.Text_Font,
    TextYAlignment = "Bottom",
    TextSize = 25
  })
  
  IsMinimized = false
  Minimize_BTN.MouseButton1Click:Connect(function()
    Minimize_BTN.Text = not IsMinimized and "+" or "-"
    if IsMinimized then
      IsMinimized = false
      CreateTween(Menu, "Size", UDim2.new(0, 500, 0, 270), 0.15, false)
    else
      IsMinimized = true
      CreateTween(Menu, "Size", UDim2.new(0, 500, 0, 25), 0.15, true)
    end
  end)
  
  local Close_Button = Create("TextButton", ButtonsFrame, {
    Text = "×",
    TextYAlignment = "Bottom",
    TextColor3 = Configs_HUB.Cor_Text,
    Size = UDim2.new(0.5, 0, 1, 0),
    AnchorPoint = Vector2.new(1, 0),
    Position = UDim2.new(1, 0, 0, 0),
    BackgroundTransparency = 1,
    Font = Configs_HUB.Text_Font,
    TextSize = 25
  })
  
  local function CreateClose()
    IsMinimized = false
    CreateTween(Menu, "Size", UDim2.new(0, 500, 0, 270), 0.3, false)
    local CloseGui = Create("TextButton", Menu, {
      BackgroundTransparency = 0.5,
      BackgroundColor3 = Configs_HUB.Cor_Hub,
      Size = UDim2.new(1, 0, 1, 0),
      AutoButtonColor = false,
      Text = "",
      BackgroundTransparency = 0.5,
      Visible = false
    })Corner(CloseGui)
    
    local CloseMenu = Create("Frame", CloseGui, {
      Size = UDim2.new(),
      AnchorPoint = Vector2.new(0.5, 0.5),
      Position = UDim2.new(0.5, 0, 0.5, 0),
      Transparency = 1,
      BackgroundColor3 = Configs_HUB.Cor_Hub
    })Corner(CloseMenu)Stroke(CloseMenu)
    
    local Mensage = Create("TextLabel", CloseMenu, {
      Size = UDim2.new(0.8, 0, 0.25, 0),
      Text = "are you sure you want to close this script??",
      Position = UDim2.new(0.1, 0, 0.2),
      TextColor3 = Configs_HUB.Cor_Text,
      Font = Configs_HUB.Text_Font,
      TextScaled = true,
      BackgroundTransparency = 1
    })
    
    local Confirm = Create("TextButton", CloseMenu, {
      Size = UDim2.new(0.35, 0, 0.3, 0),
      Position = UDim2.new(0.1, 0, 0.5, 0),
      BackgroundColor3 = Configs_HUB.Cor_Hub,
      Text = "Close Script",
      Font = Configs_HUB.Text_Font,
      TextColor3 = Color3.fromRGB(240, 0, 0),
      TextSize = 20
    })Corner(Confirm)Stroke(Confirm)
    
    local Cancel = Create("TextButton", CloseMenu, {
      Size = UDim2.new(0.35, 0, 0.3, 0),
      Position = UDim2.new(0.9, 0, 0.5, 0),
      AnchorPoint = Vector2.new(1, 0),
      BackgroundColor3 = Configs_HUB.Cor_Hub,
      Text = "Cancel",
      Font = Configs_HUB.Text_Font,
      TextColor3 = Color3.fromRGB(0, 240, 0),
      TextSize = 20
    })Corner(Cancel)Stroke(Cancel)
    
    local function SetVisible()
      if Menu.Size.Y.Offset > 100 then
        CloseGui.Visible = true
      else
        CloseGui.Visible = false
      end
    end
    
    SetVisible()
    Menu:GetPropertyChangedSignal("Size"):Connect(SetVisible)
    
    CreateTween(CloseMenu, "Transparency", 0, 0.2, false)
    CreateTween(CloseMenu, "Size", UDim2.new(0.7, 0, 0.7, 0), 0.2, false)
    
    Cancel.MouseButton1Click:Connect(function()
      CreateTween(CloseMenu, "Transparency", 1, 0.3, false)
      CreateTween(CloseMenu, "Size", UDim2.new(), 0.2, true)
      CloseGui:Destroy()
    end)
    
    Confirm.MouseButton1Click:Connect(function()
      CloseGui:Destroy()
      CreateTween(Menu, "Size", UDim2.new(), 0.3, true)
      DestroyScript()
    end)
    
    CloseGui.MouseButton1Click:Connect(function()
      CreateTween(CloseMenu, "Transparency", 1, 0.3, false)
      CreateTween(CloseMenu, "Size", UDim2.new(), 0.2, true)
      CloseGui:Destroy()
    end)
  end
  
  Close_Button.MouseButton1Click:Connect(CreateClose)
  
  local AnimMenu = Create("Frame", ScreenGui, {
    Position = UDim2.new(0.5, 0, 0.5, 0),
    AnchorPoint = Vector2.new(0.5, 0.5),
    BackgroundColor3 = Configs_HUB.Cor_Hub
  })Corner(AnimMenu, {CornerRadius = UDim.new(0, 6)})
  
  local Anim_Credits = Create("TextLabel", AnimMenu, {
    Text = Anim_Title,
    BackgroundTransparency = 1,
    Size = UDim2.new(1, 0, 1, 0),
    Visible = false,
    Font = Configs_HUB.Text_Font,
    TextTransparency = 1,
    TextColor3 = Configs_HUB.Cor_Text,
    Position = UDim2.new(0, 10, 0, 0),
    TextXAlignment = "Left",
    TextSize = 15
  })
  
  CreateTween(AnimMenu, "Size", UDim2.new(0, 0, 0, 35), 0.5, true)
  CreateTween(AnimMenu, "Size", UDim2.new(0, 150, 0, 35), 0.5, true)
  Anim_Credits.Visible = true
  task.wait(0.5)
  for i = 1, 0, -0.1 do task.wait()
    Anim_Credits.TextTransparency = i
  end
  task.wait(1)
  for i = 0, 1, 0.1 do task.wait()
    Anim_Credits.TextTransparency = i
  end
  Anim_Credits:Destroy()
  AnimMenu:Destroy()
  CreateTween(Menu, "Size", UDim2.new(0, 500, 0, 35), 0.5, true)
  TopBar.Visible = true
  CreateTween(Menu, "Size", UDim2.new(0, 500, 0, 270), 0.3, true)
  Menu.Draggable = true
  
  local line_Containers = Create("Frame", Menu, {
    BackgroundTransparency = 1,
    Size = UDim2.new(1, 0, 1, 0)
  })
  
  function MinimizeButton(Configs)
    local image = Configs.Image or ""
    local size = Configs.Size or {30, 30}
    local color = Configs.Color or Configs_HUB.Cor_Hub
    local corner = Configs.Corner or true
    local stroke = Configs.Stroke or false
    local strokecolor = Configs.StrokeColor or Configs_HUB.Cor_Stroke
    
    local Button = Create("ImageButton", ScreenGui, {
      Size = UDim2.new(0, size[1], 0, size[2]),
      Position = UDim2.new(0.15, 0, 0.15, 0),
      BackgroundColor3 = color,
      Image = image,
      Active = true,
      Draggable = true
    })if corner then Corner(Button) end if stroke then Stroke(Button, {Color = strokecolor}) end
    
    local minimize = false
    Button.MouseButton1Click:Connect(function()
      if minimize then
        minimize = false
        Menu.Visible = true
        if not IsMinimized then
          CreateTween(Menu, "Size", UDim2.new(0, 500, 0, 270), 0.3, false)
        else
          CreateTween(Menu, "Size", UDim2.new(0, 500, 0, 25), 0.3, false)
        end
      else
        minimize = true
        CreateTween(Menu, "Size", UDim2.new(0, 500, 0, 0), 0.3, true)
        Menu.Visible = false
      end
    end)
  end
  
  local ScrollBar = Create("ScrollingFrame", Menu, {
    Size = UDim2.new(0, 140, 1, -tonumber(TopBar.Size.Y.Offset + 2)),
    Position = UDim2.new(0, 0, 1, 0),
    AnchorPoint = Vector2.new(0, 1),
    CanvasSize = UDim2.new(),
    ScrollingDirection = "Y",
    AutomaticCanvasSize = "Y",
    BackgroundTransparency = 1,
    ScrollBarThickness = 2
  })Create("UIPadding", ScrollBar, {
    PaddingLeft = UDim.new(0, 10),
    PaddingRight = UDim.new(0, 10),
    PaddingTop = UDim.new(0, 10),
    PaddingBottom = UDim.new(0, 10)
  })Create("UIListLayout", ScrollBar, {
    Padding = UDim.new(0, 5)
  })
  
  local Containers = Create("Frame", Menu, {
    Size = UDim2.new(1, -tonumber(ScrollBar.Size.X.Offset + 2), 1, -tonumber(TopBar.Size.Y.Offset + 2)),
    AnchorPoint = Vector2.new(1, 1),
    Position = UDim2.new(1, 0, 1, 0),
    BackgroundTransparency = 1
  })Corner(Containers)
  
  local function Add_Line(props)
    local line = Create("Frame", line_Containers, props)
    line.BackgroundColor3 = Configs_HUB.Cor_Stroke
    line.BorderSizePixel = 0
  end
  
  Add_Line({Size = UDim2.new(1, 0, 0, 1),Position = UDim2.new(0, 0, 0, TopBar.Size.Y.Offset)})
  Add_Line({Size = UDim2.new(0, 1, 1, -tonumber(TopBar.Size.Y.Offset + 1)),
  Position = UDim2.new(0, ScrollBar.Size.X.Offset, 0, TopBar.Size.Y.Offset)})
  
  local firstVisible = true
  local FirstTab = true
  local textsize = 15
  local textcolor = Configs_HUB.Cor_Text
  
  Menu:GetPropertyChangedSignal("Size"):Connect(function()
    if Menu.Size.Y.Offset > 70 then
      ScrollBar.Visible = true
      Containers.Visible = true
      line_Containers.Visible = true
    else
      ScrollBar.Visible = false
      Containers.Visible = false
      line_Containers.Visible = false
    end
  end)
  
 function MakeTab(Configs)
    local TabName = Configs.Name or "Tab"
    local TabTitle = Configs.TabTitle or false

    local Tab = Create("TextButton", ScrollBar, {
        Size = UDim2.new(0, 130, 0, 35),
        BackgroundColor3 = Color3.fromRGB(34, 33, 36),
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0,
        Text = "",
        Font = Configs_HUB.Text_Font,
        TextColor3 = Configs_HUB.Cor_Text,
        TextSize = 14
    })

    local Frame = Create("Frame", Tab, {
        Size = UDim2.new(0, 4, 0, 35),
        BackgroundColor3 = Color3.fromRGB(124, 197, 185),
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0
    })

    local Circle = Create("Frame", Tab, {
        Size = UDim2.new(0, 26, 0, 26),
        Position = UDim2.new(0.056, 0, 0.114, 0),
        BackgroundColor3 = Color3.fromRGB(42, 42, 42),
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0
    })
    Create("UICorner", Circle, {
        CornerRadius = UDim.new(0, 100)
    })

    local Name = Create("TextLabel", Tab, {
        Size = UDim2.new(0, 89, 0, 26),
        Position = UDim2.new(0.308, 0, 0.114, 0),
        BackgroundTransparency = 1,
        Text = TabName,
        Font = Enum.Font.FredokaOne,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 14,
        TextXAlignment = Enum.TextXAlignment.Left
    })

    Create("UICorner", Tab, {
        CornerRadius = UDim.new(0, 6)
    })

    local Container = Create("ScrollingFrame", Containers, {
        Size = UDim2.new(1, 0, 1, 0),
        ScrollingDirection = "Y",
        AutomaticCanvasSize = "Y",
        CanvasSize = UDim2.new(),
        BackgroundTransparency = 1,
        ScrollBarThickness = 2,
        Visible = false
    })
    Create("UIPadding", Container, {
        PaddingLeft = UDim.new(0, 10),
        PaddingRight = UDim.new(0, 10),
        PaddingTop = UDim.new(0, 10),
        PaddingBottom = UDim.new(0, 10)
    })
    Create("UIListLayout", Container, {
        Padding = UDim.new(0, 5),
        HorizontalAlignment = Enum.HorizontalAlignment.Center
    })

    Tab.MouseButton1Click:Connect(function()
        if activeTab then
            CreateTween(activeTab, "BackgroundColor3", Color3.fromRGB(34, 33, 36), 0.3, false)
        end
        CreateTween(Tab, "BackgroundColor3", Configs_HUB.Selected_Tab_Color, 0.3, false)
        activeTab = Tab
        
        for _, container in pairs(Containers:GetChildren()) do
            if container:IsA("ScrollingFrame") then
                container.Visible = false
            end
        end
        for _, frame in pairs(ScrollBar:GetChildren()) do
            if frame:IsA("TextButton") and frame:FindFirstChild("Name") and frame.Name ~= Name then
                CreateTween(frame.Name, "TextColor3", Configs_HUB.Cor_DarkText, 0.3, false)
                frame.Name.TextSize = 14
            end
        end
        Container.Visible = true
        CreateTween(Name, "TextColor3", Configs_HUB.Cor_Text, 0.3, false)
        Name.TextSize = 15
    end)

    -- Show the first tab by default
    if firstTab then
        Container.Visible = true
        CreateTween(Tab, "BackgroundColor3", Configs_HUB.Selected_Tab_Color, 0.3, false)
        firstTab = false
        activeTab = Tab
    end

    return Container
end

-- Function to Add Button to the Active Tab's Container
function AddToggle(parent, Configs)
    local ToggleName = Configs.Name or "Toggle!!"
    local Default = Configs.Default or false
    local Callback = Configs.Callback or function() end

    local TogleFrame = Create("Frame", parent, {
        Size = UDim2.new(1, 0, 0, 25),
		BackgroundColor3 = Configs_HUB.Cor_Options,
        BackgroundTransparency = 1,
		BorderSizePixel = 0
    })

    local TextButton = Create("TextButton", TogleFrame, {
        Size = UDim2.new(1, 0, 0, 25),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        Name = "Frame",
        Text = "",
        AutoButtonColor = false
    })Corner(TextButton)

    local TextLabel = Create("TextLabel", TextButton, {
        TextSize = 12,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = ToggleName,
        Size = UDim2.new(1, 0, 1, 0),
        Position = UDim2.new(0, 10, 0, 0),
        BackgroundTransparency = 1,
        TextXAlignment = "Left",
        Font = Configs_HUB.Text_Font
    })

    local Frame1 = Create("Frame", TextButton, {
        Size = UDim2.new(0, 25, 0, 15),
        Position = UDim2.new(0, 345, 0, 5),
        BackgroundTransparency = 1,
    })Corner(Frame1, {CornerRadius = UDim.new(1, 0)})
    local Stroke = Stroke(Frame1, {Thickness = 2})

    local Frame2 = Create("Frame", Frame1, {
        Size = UDim2.new(0, 13, 0, 13),
        Position = UDim2.new(0, 2, 0.5, 0),
        AnchorPoint = Vector2.new(0, 0.5),
        BackgroundColor3 = Configs_HUB.Cor_Stroke
    })Corner(Frame2, {CornerRadius = UDim.new(1, 0)})

    local OnOff = false
    if Default then
        OnOff = true
        CreateTween(Frame2, "Position", UDim2.new(0, 10, 0.5, 0), 0.2, false)
        CreateTween(Frame2, "BackgroundColor3", Color3.fromRGB(124, 197, 185), 0.2, false)
        CreateTween(Stroke, "Color", Color3.fromRGB(124, 197, 185), 0.2, false)
        CreateTween(TextLabel, "TextColor3", Color3.fromRGB(124, 197, 185), 0.2, false)
    end
    Callback(OnOff)
    TextButton.MouseButton1Click:Connect(function()
        if Frame2.Position.X.Offset < 5 then
            OnOff = true
            CreateTween(Frame2, "Position", UDim2.new(0, 10, 0.5, 0), 0.2, false)
            CreateTween(Frame2, "BackgroundColor3", Color3.fromRGB(124, 197, 185), 0.2, false)
            CreateTween(Stroke, "Color", Color3.fromRGB(124, 197, 185), 0.2, false)
            CreateTween(TextLabel, "TextColor3", Color3.fromRGB(124, 197, 185), 0.2, false)
            Callback(true)
        else
            OnOff = false
            CreateTween(Frame2, "Position", UDim2.new(0, 2, 0.5, 0), 0.2, false)
            CreateTween(Frame2, "BackgroundColor3", Configs_HUB.Cor_Stroke, 0.2, false)
            CreateTween(Stroke, "Color", Configs_HUB.Cor_Stroke, 0.2, false)
            CreateTween(TextLabel, "TextColor3", Configs_HUB.Cor_Text, 0.2, false)
            Callback(false)
        end
    end)
    return {Frame2, Stroke, OnOff, Callback}
end

function AddSection(parent, Configs)
    local SectionName = Configs[1] or Configs.Name or "Section!!"

    local Frame = Create("Frame", parent, {
        Size = UDim2.new(1, 0, 0, 25),
        BackgroundColor3 = Configs_HUB.Cor_Hub,
        Name = "Frame",
        Transparency = 1
    })Corner(Frame)

    local TextButton = Create("TextButton", Frame, {
        TextSize = 12,
        TextColor3 = Configs_HUB.Cor_DarkText,
        Text = SectionName,
        Size = UDim2.new(1, 0, 0, 25),
        Position = UDim2.new(0, 0, 0, 0),
        BackgroundTransparency = 1,
        TextXAlignment = "Center",
        Font = Configs_HUB.Text_Font
    })
    return TextButton
end

function SetSection(Section, NewName)
    Section.Text = NewName
end

-- Function to Add Image
function AddImage(parent, Configs)
    local ImageId = Configs.ImageId or ""
    local ImageSize = Configs.Size or UDim2.new(0, 365, 0, 140)
    local ImagePosition = Configs.Position or UDim2.new(0.013, 0, 0.016, 0)
    local WelcomeText = Configs.WelcomeText or "Welcome!"
    local SubText = Configs.SubText or "You are currently playing"
    
    local Frame = Create("Frame", parent, {
        Name = "Frame",
        BackgroundColor3 = Color3.fromRGB(36, 36, 36),
        BackgroundTransparency = 1.000,
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0,
        Position = UDim2.new(0.001, 0, 0.01, 0),
        Size = UDim2.new(0, 365, 0, 140)
    })

    local ImageLabel = Create("ImageLabel", Frame, {
        Size = ImageSize,
        Position = ImagePosition,
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0,
        Image = ImageId
    })Corner(ImageLabel, {CornerRadius = UDim.new(0, 6)})

    Create("UIGradient", ImageLabel, {
        Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(17, 17, 17))},
        Rotation = 90
    })

    local WelcomeLabel = Create("TextLabel", ImageLabel, {
        Size = UDim2.new(0, 209, 0, 25),
        Position = UDim2.new(0.03, 0, 0.68, 0),
        BackgroundTransparency = 1,
        Font = Enum.Font.FredokaOne,
        Text = WelcomeText,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 11,
        TextWrapped = true,
        TextXAlignment = Enum.TextXAlignment.Left
    })

    local SubLabel = Create("TextLabel", ImageLabel, {
        Size = UDim2.new(0, 209, 0, 22),
        Position = UDim2.new(0.03, 0, 0.79, 0),
        BackgroundTransparency = 1,
        Font = Enum.Font.FredokaOne,
        Text = SubText,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 12,
        TextWrapped = true,
        TextXAlignment = Enum.TextXAlignment.Left
    })

    return ImageLabel
end
--ADDD
local function AddDatosVersion(parent, Configs)
    local versionText = Configs.Version or "V1.2"
    local fechaText = Configs.Fecha or "4/08/2024"

    -- Create Datos Frame
    local Frame = Create("Frame", parent, {
        Name = "Frame",
        BackgroundColor3 = Color3.fromRGB(36, 36, 36),
        BackgroundTransparency = 1.000,
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0,
        Position = UDim2.new(0.001, 0, 0.01, 0),
        Size = UDim2.new(0, 358, 0, 12)
    })
    Corner(Datos, {CornerRadius = UDim.new(0, 6)})

    -- Create Version TextLabel
    local Version = Create("TextLabel", Frame, {
        Name = "Version",
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        BackgroundTransparency = 1.000,
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0,
        Position = UDim2.new(0.00558659201, 0, -0.133326218, 0),
        Size = UDim2.new(0, 30, 0, 12),
        Font = Enum.Font.FredokaOne,
        Text = versionText,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 12.000,
        TextStrokeColor3 = Color3.fromRGB(255, 255, 255),
        TextWrapped = true,
        TextXAlignment = Enum.TextXAlignment.Left
    })

    -- Create Fecha TextLabel
    local Fecha = Create("TextLabel", Frame, {
        Name = "Fecha",
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        BackgroundTransparency = 1.000,
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0,
        Position = UDim2.new(0.0780000016, 0, -0.133000001, 0),
        Size = UDim2.new(0, 132, 0, 12),
        Font = Enum.Font.FredokaOne,
        Text = fechaText,
        TextColor3 = Color3.fromRGB(71, 71, 71),
        TextSize = 10.000,
        TextStrokeColor3 = Color3.fromRGB(255, 255, 255),
        TextWrapped = true,
        TextXAlignment = Enum.TextXAlignment.Left
    })

    -- Function to update texts
    local function UpdateTexts(newVersion, newFecha)
        Version.Text = newVersion or Version.Text
        Fecha.Text = newFecha or Fecha.Text
    end

    -- Return the UpdateTexts function to allow external updates
    return UpdateTexts
end
---
local function AddCosaADD(parent, Configs)
    local addedText = Configs.AddedText or "Añadido / ()"

    -- Create CosaADD Frame
    local Frame = Create("Frame", parent, {
        Name = "Frame",
        BackgroundColor3 = Color3.fromRGB(36, 36, 36),
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0,
        Position = UDim2.new(0, 0, 0.25, 0),
        Size = UDim2.new(0, 359, 0, 30)
    })
    Corner(CosaADD, {CornerRadius = UDim.new(0, 6)})

    -- Create TextLabel for "+"
    local TextLabel = Create("TextLabel", Frame, {
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        BackgroundTransparency = 1.000,
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0,
        Position = UDim2.new(0.006, 0, -0.09, 0),
        Size = UDim2.new(0, 30, 0, 33),
        Font = Enum.Font.FredokaOne,
        Text = "+",
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 23.000,
        TextStrokeColor3 = Color3.fromRGB(255, 255, 255),
        TextWrapped = true
    })

    -- Create Frame for the left color bar
    local Frame = Create("Frame", Frame, {
        BackgroundColor3 = Color3.fromRGB(124, 197, 185),
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0,
        Size = UDim2.new(0, 3, 0, 30)
    })

    -- Create TextLabel for added text
    local Aadido = Create("TextLabel", Frame, {
        Name = "Añadido",
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        BackgroundTransparency = 1.000,
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0,
        Position = UDim2.new(9, 0, 0, 0),
        Size = UDim2.new(0, 326, 0, 29),
        Font = Enum.Font.FredokaOne,
        Text = addedText,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 14.000,
        TextStrokeColor3 = Color3.fromRGB(255, 255, 255),
        TextWrapped = true,
        TextXAlignment = Enum.TextXAlignment.Left
    })

    -- Function to update the added text
    local function UpdateAddedText(newText)
        Aadido.Text = newText or Aadido.Text
    end

    -- Return the UpdateAddedText function to allow external updates
    return UpdateAddedText
end
---addddd
	function AddColorPicker(parent, Configs)
		local name = Configs.Name or "Color Picker"
		local Default = Configs.Default or Color3.fromRGB(0, 0, 200)
		local Callback = Configs.Callback or function() end
		local ColorH, ColorS, ColorV = 1, 1, 1
		Callback(Default)

		local TextButton = Create("Frame", parent, {
			Size = UDim2.new(1, 0, 0, 25),
			BackgroundColor3 = Configs_HUB.Cor_Options,
		})Corner(TextButton)

		local click = Create("TextButton", TextButton, {
			Size = UDim2.new(1, 0, 0, 25),
			BackgroundTransparency = 1,
			AutoButtonColor = false,
			Text = ""
		})

		local TextLabel = Create("TextLabel", TextButton, {
			Size = UDim2.new(1, -10, 0, 25),
			Position = UDim2.new(0, 35, 0, 0),
			TextSize = 12,
			TextColor3 = Configs_HUB.Cor_Text,
			TextXAlignment = "Left",
			Text = name,
			Font = Configs_HUB.Text_Font,
			BackgroundTransparency = 1
		})

		local picker = Create("Frame", TextButton, {
			Size = UDim2.new(0, 20, 0, 20),
			Position = UDim2.new(0, 5, 0, 2.5),
			BackgroundColor3 = Default
		})Corner(picker)Stroke(picker)

		local UI_Grade = Create("ImageButton", TextButton, {
			Size = UDim2.new(1, -100, 1, tonumber(-TextButton.Size.Y.Offset - 20)),
			Position = UDim2.new(0, 10, 0, tonumber(TextButton.Size.Y.Offset + 12.5)),
			Visible = false,
			Image = "rbxassetid://4155801252"
		})Corner(UI_Grade)Stroke(UI_Grade)local SavePos = Create("Frame", UI_Grade, {Visible = false})

		local grade = Create("TextButton", TextButton, {
			Size = UDim2.new(0, 30, 1, tonumber(-TextButton.Size.Y.Offset - 20)),
			Position = UDim2.new(1, -10, 0, tonumber(TextButton.Size.Y.Offset + 12.5)),
			AnchorPoint = Vector2.new(1, 0),
			Visible = false,
			Text = ""
		})Corner(grade)Stroke(grade)Create("UIGradient", grade, {
			Rotation = 90,
			Color = ColorSequence.new({
				ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 4)),
				ColorSequenceKeypoint.new(0.20, Color3.fromRGB(234, 255, 0)),
				ColorSequenceKeypoint.new(0.40, Color3.fromRGB(21, 255, 0)),
				ColorSequenceKeypoint.new(0.60, Color3.fromRGB(0, 255, 255)),
				ColorSequenceKeypoint.new(0.80, Color3.fromRGB(0, 17, 255)),
				ColorSequenceKeypoint.new(0.90, Color3.fromRGB(255, 0, 251)),
				ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 4))
			})
		})local SavePos2 = Create("Frame", grade, {Visible = false, Size = UDim2.new(1, 0, 0, 0)})

		local A_1 = Create("Frame", TextButton, {
			Size = UDim2.new(1, 0, 0, 0),
			Position = UDim2.new(0, 0, 0, 30),
            BackgroundTransparency = 1,
			Visible = false
		})

		local Select1 = Create("Frame", grade, {
			Size = UDim2.new(1, 0, 0, 10),
			Position = UDim2.new(0, 0, 0, select(3, Color3.toHSV(Default))),
			BackgroundTransparency = 1,
			Active = true,
			Draggable = true
		})Corner(Select1, {CornerRadius = UDim.new(2, 0)})Stroke(Select1, {Color = Color3.fromRGB(255, 255, 255)})

		local Select2 = Create("Frame", UI_Grade, {
			Size = UDim2.new(0, 15, 0, 15),
			Position = UDim2.new(0, select(2, Color3.toHSV(Default)), 0, select(1, Color3.toHSV(Default))),
			BackgroundTransparency = 1,
			Active = true,
			Draggable = true
		})Corner(Select2, {CornerRadius = UDim.new(2, 0)})Stroke(Select2, {Color = Color3.fromRGB(255, 255, 255)})

		UI_Grade.MouseButton1Click:Connect(function()
			local mouse = UserInputService:GetMouseLocation()
			local savepos = SavePos.AbsolutePosition
			CreateTween(Select2, "Position", UDim2.new(0, mouse.X - savepos.X, 0, tonumber(mouse.Y - savepos.Y) - 35), 0.3, false)
		end)

		grade.MouseButton1Click:Connect(function()
			local mouse = UserInputService:GetMouseLocation().Y - 35
			local savepos = SavePos2.AbsolutePosition.Y
			CreateTween(Select1, "Position", UDim2.new(0, 0, 0, mouse - savepos), 0.3, false)
		end)

		local function callback()Callback(Color3.fromHSV(ColorH, ColorS, ColorV))end
		local function updcolorpicker()
			ColorH = tonumber(Select1.Position.Y.Offset) / 80
			ColorS = tonumber(215 - Select2.Position.X.Offset) / 215
			ColorV = tonumber(75 - Select2.Position.Y.Offset) / 75
			UI_Grade.ImageColor3 = Color3.fromHSV(ColorH, 1, 1)
			picker.BackgroundColor3 = Color3.fromHSV(ColorH, ColorS, ColorV)
			callback()
		end

		updcolorpicker()

		Select1.Changed:Connect(function(prop)
			if prop == "Position" then
				Select1.Position = UDim2.new(0, 0, 0, math.clamp(Select1.Position.Y.Offset, 0, 80))
				updcolorpicker()
			end
		end)

		Select2.Changed:Connect(function(prop)
			if prop == "Position" then
				Select2.Position = UDim2.new(0, math.clamp(Select2.Position.X.Offset, 0, 222), 0, math.clamp(Select2.Position.Y.Offset, 0, 75))
				updcolorpicker()
			end
		end)

		TextButton.Changed:Connect(function(prop)
			if prop == "Size" then
				if TextButton.Size.Y.Offset >= 60 then
					picker.Position = UDim2.new(0, 5, 0, 5)
					UI_Grade.Visible = true
					A_1.Visible = true
					grade.Visible = true
				else
					picker.Position = UDim2.new(0, 5, 0, 2.5)
					UI_Grade.Visible = false
					A_1.Visible = false
					grade.Visible = false
				end
			end
		end)

		local onoff = false
		click.MouseButton1Click:Connect(function()
			onoff = not onoff
			if onoff == true then
				local tween = TweenService:Create(TextButton, TweenInfo.new(0.2, Enum.EasingStyle.Linear),
					{Size = UDim2.new(1, 0, 0, 140)})tween:play()tween.Completed:Wait()
			else
				local tween = TweenService:Create(TextButton, TweenInfo.new(0.2, Enum.EasingStyle.Linear),
					{Size = UDim2.new(1, 0, 0, 25)})tween:play()tween.Completed:Wait()
			end
		end)
	end
------ADADDD
function AddDiscord(parent, Configs)
    local DiscordLink = Configs[1] or Configs.DiscordLink or "https://discord.gg/"
    local DiscordIcon = Configs[2] or Configs.DiscordIcon or "rbxassetid://"
    local DiscordTitle = Configs[3] or Configs.DiscordTitle or ""

    local Frame = Create("Frame", parent, {
        Size = UDim2.new(1, 0, 0, 110),
        BackgroundColor3 = Color3.fromRGB(30, 30, 30),
        Name = "Frame",
        AutomaticSize = Enum.AutomaticSize.Y
    })

    local LinkLabel = Create("TextLabel", Frame, {
        Size = UDim2.new(1, 0, 0, 25),
        Text = DiscordLink,
        TextXAlignment = Enum.TextXAlignment.Left,
        BackgroundTransparency = 1,
        Position = UDim2.new(0, 12, 0, 0),
        TextColor3 = Color3.fromRGB(0, 120, 255),
        Font = Enum.Font.GothamBold,
        TextSize = 14
    })

    local TitleLabel = Create("TextLabel", Frame, {
        Size = UDim2.new(1, 0, 0, 25),
        Text = DiscordTitle,
        TextXAlignment = Enum.TextXAlignment.Left,
        BackgroundTransparency = 1,
        Position = UDim2.new(0, 60, 0, 25),
        TextColor3 = Color3.fromRGB(200, 200, 200),
        Font = Enum.Font.GothamBold,
        TextSize = 14
    })

    local IconLabel = Create("ImageLabel", Frame, {
        Size = UDim2.new(0, 40, 0, 40),
        AnchorPoint = Vector2.new(0, 0.5),
        Position = UDim2.new(0, 12, 0.45, 0),
        Image = DiscordIcon
    })
    Corner(IconLabel)

    local JoinButton = Create("TextButton", Frame, {
        Size = UDim2.new(1, -24, 0, 25),
        AnchorPoint = Vector2.new(0.5, 1),
        Position = UDim2.new(0.5, 0, 1, -8),
        Text = "Join",
        Font = Enum.Font.GothamBold,
        TextSize = 15,
        TextColor3 = Color3.fromRGB(220, 220, 220),
        BackgroundColor3 = Color3.fromRGB(50, 200, 50)
    })
    Corner(JoinButton)

    local time = tick()
    local ClickCounter = 0
    JoinButton.MouseButton1Click:Connect(function()
        if ClickCounter == 0 or tick() - time > 5 then
            time = tick()
            setclipboard(DiscordLink)
            ClickCounter = ClickCounter + 1
            JoinButton.Text = "Copied to Clipboard"
            JoinButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
            JoinButton.TextColor3 = Color3.fromRGB(150, 150, 150)
            task.wait(5)
            JoinButton.Text = "Join"
            JoinButton.BackgroundColor3 = Color3.fromRGB(50, 200, 50)
            JoinButton.TextColor3 = Color3.fromRGB(220, 220, 220)
        end
    end)
end
-----------------------------------------------------------------------------AddSlider
function AddSlider(parent, Configs)
    local SliderName = Configs.Name or "Slider"
    local Default = Configs.Default or 0
    local MinValue = Configs.Min or 0
    local MaxValue = Configs.Max or 100
    local Callback = Configs.Callback or function() end

    -- Create the main slider frame
    local SliderFrame = Create("Frame", parent, {
        Size = UDim2.new(1, 0, 0, 25),
        BackgroundTransparency = 1
    })

    -- Create the label for the slider
    local SliderLabel = Create("TextLabel", SliderFrame, {
        Size = UDim2.new(1, -50, 0, 25),
        Position = UDim2.new(0, 10, 0, 0),
        BackgroundTransparency = 1,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = SliderName .. ": " .. Default,
        TextXAlignment = Enum.TextXAlignment.Left,
        Font = Configs_HUB.Text_Font,
        TextSize = 14
    })

    -- Create the slider track
    local Track = Create("Frame", SliderFrame, {
        Size = UDim2.new(1, -150, 0, 5),
        Position = UDim2.new(0, 142, 0.5, 0),
        AnchorPoint = Vector2.new(0, 0.5),
        BackgroundColor3 = Configs_HUB.Cor_Options
    })Corner(Track)

    -- Create the slider thumb
    local Thumb = Create("ImageButton", Track, {
        Size = UDim2.new(0, 15, 1, 15),
        Position = UDim2.new(0, 0, 0.5, 0),
        AnchorPoint = Vector2.new(0.5, 0.5),
        BackgroundColor3 = Configs_HUB.Cor_Stroke,
        AutoButtonColor = false,
        Image = ""
    })Corner(Thumb)

    -- Update slider position and callback
    local function UpdateSlider(input)
        local scale = (input.Position.X - Track.AbsolutePosition.X) / Track.AbsoluteSize.X
        scale = math.clamp(scale, 0, 1)
        local value = math.floor(MinValue + scale * (MaxValue - MinValue))
        Thumb.Position = UDim2.new(scale, 0, 0.5, 0)
        SliderLabel.Text = SliderName .. ": " .. value
        Callback(value)
    end

    -- Handle dragging
    local dragging = false
    Thumb.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)

    Thumb.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            UpdateSlider(input)
        end
    end)

    -- Set initial position
    local initialScale = (Default - MinValue) / (MaxValue - MinValue)
    Thumb.Position = UDim2.new(initialScale, 0, 0.5, 0)
    SliderLabel.Text = SliderName .. ": " .. Default
    Callback(Default)

    return SliderFrame
end
-----------------------------------------------------------------------------AddKeyBind
function AddKeybind(parent, Configs)
    local KeybindName = Configs.Name or "Keybind"
    local Default = Configs.Default or Enum.KeyCode.F
    local Callback = Configs.Callback or function() end

    -- Create the main frame for the keybind
    local KeybindFrame = Create("Frame", parent, {
        Size = UDim2.new(1, 0, 0, 25),
		BackgroundColor3 = Configs_HUB.Cor_Options,
        BackgroundTransparency = 0,
		BorderSizePixel = 0
    })Corner(KeybindFrame)

    -- Create the label for the keybind
    local KeybindLabel = Create("TextLabel", KeybindFrame, {
        Size = UDim2.new(1, -50, 0, 25),
        Position = UDim2.new(0, 10, 0, 0),
        BackgroundTransparency = 1,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = KeybindName .. ": " .. Default.Name,
        TextXAlignment = Enum.TextXAlignment.Left,
        Font = Configs_HUB.Text_Font,
        TextSize = 14
    })

    -- Create the button to set the keybind
    local KeybindButton = Create("TextButton", KeybindFrame, {
        Size = UDim2.new(1, -180, 0, 22),
        Position = UDim2.new(0, 180, 0.5, -10),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = Default.Name,
        Font = Configs_HUB.Text_Font,
        TextSize = 14
    })Corner(KeybindButton)Stroke(KeybindButton)

    -- Function to update the keybind
    local function UpdateKeybind(newKey)
        KeybindLabel.Text = KeybindName .. ": " .. newKey.Name
        KeybindButton.Text = newKey.Name
        Callback(newKey)
    end

    -- Set initial keybind
    UpdateKeybind(Default)

    -- Handle keybind button click
    KeybindButton.MouseButton1Click:Connect(function()
        KeybindButton.Text = "Press a key..."
        local connection
        connection = UserInputService.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.Keyboard then
                UpdateKeybind(input.KeyCode)
                connection:Disconnect()
            end
        end)
    end)

    -- Detect key press
    UserInputService.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Default then
            Callback(input.KeyCode)
        end
    end)

    return KeybindFrame
end
-----------------------------------------------------------------------------AddTextBox
function AddTextBox(parent, Configs)
    local TextBoxName = Configs.Name or "TextBox"
    local Default = Configs.Default or ""
    local Placeholder = Configs.Placeholder or ""
    local Callback = Configs.Callback or function() end

    -- Create the main frame for the text box
    local TextBoxFrame = Create("Frame", parent, {
        Size = UDim2.new(1, 0, 0, 25),
		BackgroundColor3 = Configs_HUB.Cor_Options,
        BackgroundTransparency = 0,
		BorderSizePixel = 0
    })Corner(TextBoxFrame)

    -- Create the label for the text box
    local TextBoxLabel = Create("TextLabel", TextBoxFrame, {
        Size = UDim2.new(1, -20, 0, 25),
        Position = UDim2.new(0, 10, 0, 0),
        BackgroundTransparency = 1,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = TextBoxName,
        TextXAlignment = Enum.TextXAlignment.Left,
        Font = Configs_HUB.Text_Font,
        TextSize = 14
    })

    -- Create the text box
    local TextBox = Create("TextBox", TextBoxFrame, {
        Size = UDim2.new(1, -180, 0, 22),
        Position = UDim2.new(0, 180, 0.5, -10),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        TextColor3 = Configs_HUB.Cor_Text,
        PlaceholderText = Placeholder,
        Text = Default,
        Font = Configs_HUB.Text_Font,
        TextSize = 14
    })Corner(TextBox)Stroke(TextBox)

    -- Callback for when the text is changed
    TextBox.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            Callback(TextBox.Text)
        end
    end)

    -- Set initial text
    Callback(Default)

    return TextBoxFrame
end
-----------------------------------------------------------------------------AddContainer
function AddButton(parent, Configs)
    local ButtonName = Configs.Name or "Button"
    local Callback = Configs.Callback or function() end

    -- Create the main frame for the button
    local ButtonFrame = Create("Frame", parent, {
        Size = UDim2.new(1, 0, 0, 25),
        BackgroundTransparency = 1
    })

    -- Create the label for the button
    local ButtonLabel = Create("TextLabel", ButtonFrame, {
        Size = UDim2.new(1, -20, 0, 25),
        Position = UDim2.new(0, 10, 0, 0),
        BackgroundTransparency = 1,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = ButtonName,
        TextXAlignment = Enum.TextXAlignment.Left,
        Font = Configs_HUB.Text_Font,
        TextSize = 14
    })

    -- Create the button
    local Button = Create("TextButton", ButtonFrame, {
        Size = UDim2.new(1, -80, 0, 23),
        Position = UDim2.new(0, 80, 0, 0),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = ButtonName,
        Font = Configs_HUB.Text_Font,
        TextSize = 14,
        AutoButtonColor = true
    })Corner(Button)Stroke(Button)

    -- Handle button click
    Button.MouseButton1Click:Connect(function()
        Callback()
    end)

    return ButtonFrame
end
-----------------------------------------------------------------------------DrownDon
local TweenService = game:GetService("TweenService")

function AddContainer(parent, Configs)
    local ContainerName = Configs.Name or "Container"
    local Components = Configs.Components or {}

    -- Create the main frame for the container
    local ContainerFrame = Create("Frame", parent, {
        Size = UDim2.new(1, 0, 0, 25),
		BackgroundColor3 = Color3.fromRGB(32, 32, 32),
        BackgroundTransparency = 0
    })Corner(ContainerFrame)Stroke(ContainerFrame)

    -- Create the button to open the container menu
    local ContainerButton = Create("TextButton", ContainerFrame, {
        Size = UDim2.new(1, 0, 0, 25),
        Position = UDim2.new(0, 10, 0, 0),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = ContainerName,
        Font = Configs_HUB.Text_Font,
        TextSize = 14,
        AutoButtonColor = false
    })Corner(ContainerButton)

    -- Create a UIListLayout to organize the components
    local UIListLayout = Create("UIListLayout", ContainerFrame, {
        SortOrder = Enum.SortOrder.LayoutOrder,
        Padding = UDim.new(0, 5)
    })

    -- Function to add a component to the container
    local function AddComponent(component)
        if component.Type == "Button" then
            AddButton(ContainerFrame, component)
        elseif component.Type == "Slider" then
            AddSlider(ContainerFrame, component)
        elseif component.Type == "Toggle" then
            AddToggle(ContainerFrame, component)
        elseif component.Type == "ColorPicker" then
            AddColorPicker(ContainerFrame, component)
        elseif component.Type == "Dropdown" then
            AddDropdown(ContainerFrame, component)
        elseif component.Type == "TextBox" then
            AddTextBox(ContainerFrame, component)
        elseif component.Type == "Keybind" then
            AddKeybind(ContainerFrame, component)
        end
    end

    -- Add all components to the container
    for _, component in ipairs(Components) do
        AddComponent(component)
    end

    -- Function to toggle visibility of components
    local function ToggleComponentsVisibility(visible)
        for _, child in ipairs(ContainerFrame:GetChildren()) do
            if child:IsA("GuiObject") and child ~= ContainerButton and child ~= UIListLayout then
                child.Visible = visible
            end
        end
    end

    -- Calculate the height of the container based on the components
    local function CalculateContainerHeight()
        local totalHeight = ContainerButton.Size.Y.Offset + 10 -- Start with button height
        for _, child in ipairs(ContainerFrame:GetChildren()) do
            if child:IsA("GuiObject") and child ~= ContainerButton and child ~= UIListLayout then
                totalHeight = totalHeight + child.Size.Y.Offset + UIListLayout.Padding.Offset
            end
        end
        return totalHeight
    end

    -- Handle container button click
    ContainerButton.MouseButton1Click:Connect(function()
        local onoff = ContainerFrame.Size.Y.Offset > 50
        if onoff then
            local tween = TweenService:Create(ContainerFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = UDim2.new(1, 0, 0, 25)})
            tween:Play()
            tween.Completed:Connect(function()
                ToggleComponentsVisibility(false)
            end)
        else
            ToggleComponentsVisibility(true)
            local newHeight = CalculateContainerHeight()
            local tween = TweenService:Create(ContainerFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = UDim2.new(1, 0, 0, newHeight)})
            tween:Play()
        end
    end)

    -- Initially hide all components
    ToggleComponentsVisibility(false)

    return ContainerFrame
end
