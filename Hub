-- Configuration
local Configs_HUB = {
    Cor_Hub = Color3.fromRGB(20, 19, 21),
    Cor_Options = Color3.fromRGB(26, 26, 26),
    Cor_Stroke = Color3.fromRGB(60, 60, 60),
    Cor_Text = Color3.fromRGB(240, 240, 240),
    Cor_DarkText = Color3.fromRGB(140, 140, 140),
    Corner_Radius = UDim.new(0, 4),
    Text_Font = Enum.Font.FredokaOne,
    Selected_Tab_Color = Color3.fromRGB(124, 197, 185)
}

-- Services
local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Utility Functions
local function Create(instance, parent, props)
    local new = Instance.new(instance, parent)
    if props then
        for prop, value in pairs(props) do
            new[prop] = value
        end
    end
    return new
end

local function SetProps(instance, props)
    if instance and props then
        for prop, value in pairs(props) do
            instance[prop] = value
        end
    end
    return instance
end

local function Corner(parent, props)
    local new = Create("UICorner", parent)
    new.CornerRadius = Configs_HUB.Corner_Radius
    if props then
        SetProps(new, props)
    end
    return new
end

local function Stroke(parent, props)
    local new = Create("UIStroke", parent)
    new.Color = Configs_HUB.Cor_Stroke
    new.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    if props then
        SetProps(new, props)
    end
    return new
end

local function CreateTween(instance, prop, value, time, tweenWait)
    local tween = TweenService:Create(instance,
        TweenInfo.new(time, Enum.EasingStyle.Linear),
        {[prop] = value})
    tween:Play()
    if tweenWait then
        tween.Completed:Wait()
    end
end

-- Main GUI Elements
local ScreenGui = Create("ScreenGui", CoreGui, {
    Name = "Custom GUI"
})

local Menu = Create("Frame", ScreenGui, {
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    Position = UDim2.new(0.241, 0, 0.153, 0),
    Size = UDim2.new(0, 550, 0, 350)
})Corner(Menu)

local ScrollBar = Create("ScrollingFrame", Menu, {
    Active = true,
    AnchorPoint = Vector2.new(0, 1),
    BackgroundTransparency = 1,
    Position = UDim2.new(0, 0, 1, 0),
    Size = UDim2.new(0, 150, 0, 324),
    CanvasSize = UDim2.new(0, 0, 0, 0),
    ScrollBarThickness = 2,
    ScrollingDirection = Enum.ScrollingDirection.Y
})Create("UIPadding", ScrollBar, {
    PaddingBottom = UDim.new(0, 10),
    PaddingLeft = UDim.new(0, 10),
    PaddingRight = UDim.new(0, 10),
    PaddingTop = UDim.new(0, 10)
})Create("UIGridLayout", ScrollBar, {
    CellSize = UDim2.new(0, 130, 0, 35),
    CellPadding = UDim2.new(0, 10, 0, 10),
    FillDirection = Enum.FillDirection.Horizontal,
    SortOrder = Enum.SortOrder.LayoutOrder
})

local TopBar = Create("Frame", Menu, {
    BackgroundTransparency = 1,
    Size = UDim2.new(1, 0, 0, 25)
})

local ButtonsFrame = Create("Frame", TopBar, {
    AnchorPoint = Vector2.new(1, 0),
    BackgroundTransparency = 1,
    Position = UDim2.new(1, -5, 0, 0),
    Size = UDim2.new(0, 40, 1, -5)
})

local Minimize_BTN = Create("TextButton", ButtonsFrame, {
    BackgroundTransparency = 1,
    Size = UDim2.new(0.5, 0, 1, 0),
    Font = Configs_HUB.Text_Font,
    Text = "-",
    TextColor3 = Configs_HUB.Cor_Text,
    TextSize = 25,
    TextWrapped = true,
    TextYAlignment = Enum.TextYAlignment.Bottom
})

local Close_Button = Create("TextButton", ButtonsFrame, {
    AnchorPoint = Vector2.new(1, 0),
    BackgroundTransparency = 1,
    Size = UDim2.new(0.5, 0, 1, 0),
    Position = UDim2.new(1, 0, 0, 0),
    Font = Configs_HUB.Text_Font,
    Text = "Ã—",
    TextColor3 = Configs_HUB.Cor_Text,
    TextSize = 25,
    TextWrapped = true,
    TextYAlignment = Enum.TextYAlignment.Bottom
})

local Title = Create("TextLabel", TopBar, {
    BackgroundTransparency = 1,
    Position = UDim2.new(0, 0, 0, 0),
    Size = UDim2.new(0.27, 0, 1, 0),
    Font = Configs_HUB.Text_Font,
    Text = "Sundare",
    TextColor3 = Color3.fromRGB(124, 197, 185),
    TextSize = 22,
    TextWrapped = true
})

local Containers = Create("Frame", Menu, {
    AnchorPoint = Vector2.new(1, 1),
    BackgroundTransparency = 1,
    Position = UDim2.new(1, 0, 1, 0),
    Size = UDim2.new(0, 400, 0, 324)
})Corner(Containers)

-- Functionality for Close and Minimize Buttons
local IsMinimized = false
Minimize_BTN.MouseButton1Click:Connect(function()
    if IsMinimized then
        IsMinimized = false
        Minimize_BTN.Text = "-"
        Menu.Size = UDim2.new(0, 550, 0, 350)
        ScrollBar.Visible = true
        Containers.Visible = true
    else
        IsMinimized = true
        Minimize_BTN.Text = "+"
        ScrollBar.Visible = false
        Containers.Visible = false
        CreateTween(Menu, "Size", UDim2.new(0, 550, 0, 25), 0.15, false)
    end
end)

Close_Button.MouseButton1Click:Connect(function()
    -- Hide elements before closing to avoid moving them
    ScrollBar.Visible = false
    Containers.Visible = false
    CreateTween(Menu, "Size", UDim2.new(0, 0, 0, 0), 0.3, true)
    task.wait(0.3)  -- Wait for the tween to complete
    ScreenGui:Destroy()
end)

-- Make the GUI Draggable
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    Menu.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

Menu.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = Menu.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

Menu.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Function to Create Tabs
local firstTab = true
local activeTab = nil

 function MakeTab(Configs)
    local TabName = Configs.Name or "Tab"
    local TabTitle = Configs.TabTitle or false

    local Tab = Create("TextButton", ScrollBar, {
        Size = UDim2.new(0, 130, 0, 35),
        BackgroundColor3 = Color3.fromRGB(34, 33, 36),
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0,
        Text = "",
        Font = Configs_HUB.Text_Font,
        TextColor3 = Configs_HUB.Cor_Text,
        TextSize = 14
    })

    local Frame = Create("Frame", Tab, {
        Size = UDim2.new(0, 4, 0, 35),
        BackgroundColor3 = Color3.fromRGB(124, 197, 185),
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0
    })

    local Circle = Create("Frame", Tab, {
        Size = UDim2.new(0, 26, 0, 26),
        Position = UDim2.new(0.056, 0, 0.114, 0),
        BackgroundColor3 = Color3.fromRGB(42, 42, 42),
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0
    })
    Create("UICorner", Circle, {
        CornerRadius = UDim.new(0, 100)
    })

    local Name = Create("TextLabel", Tab, {
        Size = UDim2.new(0, 89, 0, 26),
        Position = UDim2.new(0.308, 0, 0.114, 0),
        BackgroundTransparency = 1,
        Text = TabName,
        Font = Enum.Font.FredokaOne,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 14,
        TextXAlignment = Enum.TextXAlignment.Left
    })

    Create("UICorner", Tab, {
        CornerRadius = UDim.new(0, 6)
    })

    local Container = Create("ScrollingFrame", Containers, {
        Size = UDim2.new(1, 0, 1, 0),
        ScrollingDirection = "Y",
        AutomaticCanvasSize = "Y",
        CanvasSize = UDim2.new(),
        BackgroundTransparency = 1,
        ScrollBarThickness = 2,
        Visible = false
    })
    Create("UIPadding", Container, {
        PaddingLeft = UDim.new(0, 10),
        PaddingRight = UDim.new(0, 10),
        PaddingTop = UDim.new(0, 10),
        PaddingBottom = UDim.new(0, 10)
    })
    Create("UIListLayout", Container, {
        Padding = UDim.new(0, 5),
        HorizontalAlignment = Enum.HorizontalAlignment.Center
    })

    Tab.MouseButton1Click:Connect(function()
        if activeTab then
            CreateTween(activeTab, "BackgroundColor3", Color3.fromRGB(34, 33, 36), 0.3, false)
        end
        CreateTween(Tab, "BackgroundColor3", Configs_HUB.Selected_Tab_Color, 0.3, false)
        activeTab = Tab
        
        for _, container in pairs(Containers:GetChildren()) do
            if container:IsA("ScrollingFrame") then
                container.Visible = false
            end
        end
        for _, frame in pairs(ScrollBar:GetChildren()) do
            if frame:IsA("TextButton") and frame:FindFirstChild("Name") and frame.Name ~= Name then
                CreateTween(frame.Name, "TextColor3", Configs_HUB.Cor_DarkText, 0.3, false)
                frame.Name.TextSize = 14
            end
        end
        Container.Visible = true
        CreateTween(Name, "TextColor3", Configs_HUB.Cor_Text, 0.3, false)
        Name.TextSize = 15
    end)

    -- Show the first tab by default
    if firstTab then
        Container.Visible = true
        CreateTween(Tab, "BackgroundColor3", Configs_HUB.Selected_Tab_Color, 0.3, false)
        firstTab = false
        activeTab = Tab
    end

    return Container
end

-- Function to Add Button to the Active Tab's Container
function AddToggle(parent, Configs)
    local ToggleName = Configs.Name or "Toggle!!"
    local Default = Configs.Default or false
    local Callback = Configs.Callback or function() end

    local TogleFrame = Create("Frame", parent, {
        Size = UDim2.new(1, 0, 0, 25),
		BackgroundColor3 = Configs_HUB.Cor_Options,
        BackgroundTransparency = 1,
		BorderSizePixel = 0
    })

    local TextButton = Create("TextButton", TogleFrame, {
        Size = UDim2.new(1, 0, 0, 25),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        Name = "Frame",
        Text = "",
        AutoButtonColor = false
    })Corner(TextButton)

    local TextLabel = Create("TextLabel", TextButton, {
        TextSize = 12,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = ToggleName,
        Size = UDim2.new(1, 0, 1, 0),
        Position = UDim2.new(0, 10, 0, 0),
        BackgroundTransparency = 1,
        TextXAlignment = "Left",
        Font = Configs_HUB.Text_Font
    })

    local Frame1 = Create("Frame", TextButton, {
        Size = UDim2.new(0, 25, 0, 15),
        Position = UDim2.new(0, 345, 0, 5),
        BackgroundTransparency = 1,
    })Corner(Frame1, {CornerRadius = UDim.new(1, 0)})
    local Stroke = Stroke(Frame1, {Thickness = 2})

    local Frame2 = Create("Frame", Frame1, {
        Size = UDim2.new(0, 13, 0, 13),
        Position = UDim2.new(0, 2, 0.5, 0),
        AnchorPoint = Vector2.new(0, 0.5),
        BackgroundColor3 = Configs_HUB.Cor_Stroke
    })Corner(Frame2, {CornerRadius = UDim.new(1, 0)})

    local OnOff = false
    if Default then
        OnOff = true
        CreateTween(Frame2, "Position", UDim2.new(0, 10, 0.5, 0), 0.2, false)
        CreateTween(Frame2, "BackgroundColor3", Color3.fromRGB(124, 197, 185), 0.2, false)
        CreateTween(Stroke, "Color", Color3.fromRGB(124, 197, 185), 0.2, false)
        CreateTween(TextLabel, "TextColor3", Color3.fromRGB(124, 197, 185), 0.2, false)
    end
    Callback(OnOff)
    TextButton.MouseButton1Click:Connect(function()
        if Frame2.Position.X.Offset < 5 then
            OnOff = true
            CreateTween(Frame2, "Position", UDim2.new(0, 10, 0.5, 0), 0.2, false)
            CreateTween(Frame2, "BackgroundColor3", Color3.fromRGB(124, 197, 185), 0.2, false)
            CreateTween(Stroke, "Color", Color3.fromRGB(124, 197, 185), 0.2, false)
            CreateTween(TextLabel, "TextColor3", Color3.fromRGB(124, 197, 185), 0.2, false)
            Callback(true)
        else
            OnOff = false
            CreateTween(Frame2, "Position", UDim2.new(0, 2, 0.5, 0), 0.2, false)
            CreateTween(Frame2, "BackgroundColor3", Configs_HUB.Cor_Stroke, 0.2, false)
            CreateTween(Stroke, "Color", Configs_HUB.Cor_Stroke, 0.2, false)
            CreateTween(TextLabel, "TextColor3", Configs_HUB.Cor_Text, 0.2, false)
            Callback(false)
        end
    end)
    return {Frame2, Stroke, OnOff, Callback}
end

function AddSection(parent, Configs)
    local SectionName = Configs[1] or Configs.Name or "Section!!"

    local Frame = Create("Frame", parent, {
        Size = UDim2.new(1, 0, 0, 25),
        BackgroundColor3 = Configs_HUB.Cor_Hub,
        Name = "Frame",
        Transparency = 1
    })Corner(Frame)

    local TextButton = Create("TextButton", Frame, {
        TextSize = 12,
        TextColor3 = Configs_HUB.Cor_DarkText,
        Text = SectionName,
        Size = UDim2.new(1, 0, 0, 25),
        Position = UDim2.new(0, 0, 0, 0),
        BackgroundTransparency = 1,
        TextXAlignment = "Center",
        Font = Configs_HUB.Text_Font
    })
    return TextButton
end

function SetSection(Section, NewName)
    Section.Text = NewName
end

-- Function to Add Image
function AddImage(parent, Configs)
    local ImageId = Configs.ImageId or ""
    local ImageSize = Configs.Size or UDim2.new(0, 365, 0, 140)
    local ImagePosition = Configs.Position or UDim2.new(0.013, 0, 0.016, 0)
    local WelcomeText = Configs.WelcomeText or "Welcome!"
    local SubText = Configs.SubText or "You are currently playing"
    
    local Frame = Create("Frame", parent, {
        Name = "Frame",
        BackgroundColor3 = Color3.fromRGB(36, 36, 36),
        BackgroundTransparency = 1.000,
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0,
        Position = UDim2.new(0.001, 0, 0.01, 0),
        Size = UDim2.new(0, 365, 0, 140)
    })

    local ImageLabel = Create("ImageLabel", Frame, {
        Size = ImageSize,
        Position = ImagePosition,
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0,
        Image = ImageId
    })Corner(ImageLabel, {CornerRadius = UDim.new(0, 6)})

    Create("UIGradient", ImageLabel, {
        Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(17, 17, 17))},
        Rotation = 90
    })

    local WelcomeLabel = Create("TextLabel", ImageLabel, {
        Size = UDim2.new(0, 209, 0, 25),
        Position = UDim2.new(0.03, 0, 0.68, 0),
        BackgroundTransparency = 1,
        Font = Enum.Font.FredokaOne,
        Text = WelcomeText,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 11,
        TextWrapped = true,
        TextXAlignment = Enum.TextXAlignment.Left
    })

    local SubLabel = Create("TextLabel", ImageLabel, {
        Size = UDim2.new(0, 209, 0, 22),
        Position = UDim2.new(0.03, 0, 0.79, 0),
        BackgroundTransparency = 1,
        Font = Enum.Font.FredokaOne,
        Text = SubText,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 12,
        TextWrapped = true,
        TextXAlignment = Enum.TextXAlignment.Left
    })

    return ImageLabel
end
--ADDD
function AddDatosVersion(parent, Configs)
    local versionText = Configs.Version or "V1.2"
    local fechaText = Configs.Fecha or "4/08/2024"

    -- Create Datos Frame
    local Frame = Create("Frame", parent, {
        Name = "Frame",
        BackgroundColor3 = Color3.fromRGB(36, 36, 36),
        BackgroundTransparency = 1.000,
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0,
        Position = UDim2.new(0.001, 0, 0.01, 0),
        Size = UDim2.new(0, 358, 0, 12)
    })
    Corner(Datos, {CornerRadius = UDim.new(0, 6)})

    -- Create Version TextLabel
    local Version = Create("TextLabel", Frame, {
        Name = "Version",
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        BackgroundTransparency = 1.000,
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0,
        Position = UDim2.new(0.00558659201, 0, -0.133326218, 0),
        Size = UDim2.new(0, 30, 0, 12),
        Font = Enum.Font.FredokaOne,
        Text = versionText,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 12.000,
        TextStrokeColor3 = Color3.fromRGB(255, 255, 255),
        TextWrapped = true,
        TextXAlignment = Enum.TextXAlignment.Left
    })

    -- Create Fecha TextLabel
    local Fecha = Create("TextLabel", Frame, {
        Name = "Fecha",
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        BackgroundTransparency = 1.000,
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0,
        Position = UDim2.new(0.0780000016, 0, -0.133000001, 0),
        Size = UDim2.new(0, 132, 0, 12),
        Font = Enum.Font.FredokaOne,
        Text = fechaText,
        TextColor3 = Color3.fromRGB(71, 71, 71),
        TextSize = 10.000,
        TextStrokeColor3 = Color3.fromRGB(255, 255, 255),
        TextWrapped = true,
        TextXAlignment = Enum.TextXAlignment.Left
    })

    -- Function to update texts
    local function UpdateTexts(newVersion, newFecha)
        Version.Text = newVersion or Version.Text
        Fecha.Text = newFecha or Fecha.Text
    end

    -- Return the UpdateTexts function to allow external updates
    return UpdateTexts
end
---
function AddCosaADD(parent, Configs)
    local addedText = Configs.AddedText or "AÃ±adido / ()"

    -- Create CosaADD Frame
    local Frame = Create("Frame", parent, {
        Name = "Frame",
        BackgroundColor3 = Color3.fromRGB(36, 36, 36),
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0,
        Position = UDim2.new(0, 0, 0.25, 0),
        Size = UDim2.new(0, 359, 0, 30)
    })
    Corner(CosaADD, {CornerRadius = UDim.new(0, 6)})

    -- Create TextLabel for "+"
    local TextLabel = Create("TextLabel", Frame, {
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        BackgroundTransparency = 1.000,
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0,
        Position = UDim2.new(0.006, 0, -0.09, 0),
        Size = UDim2.new(0, 30, 0, 33),
        Font = Enum.Font.FredokaOne,
        Text = "+",
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 23.000,
        TextStrokeColor3 = Color3.fromRGB(255, 255, 255),
        TextWrapped = true
    })

    -- Create Frame for the left color bar
    local Frame = Create("Frame", Frame, {
        BackgroundColor3 = Color3.fromRGB(124, 197, 185),
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0,
        Size = UDim2.new(0, 3, 0, 30)
    })

    -- Create TextLabel for added text
    local Aadido = Create("TextLabel", Frame, {
        Name = "AÃ±adido",
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        BackgroundTransparency = 1.000,
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0,
        Position = UDim2.new(9, 0, 0, 0),
        Size = UDim2.new(0, 326, 0, 29),
        Font = Enum.Font.FredokaOne,
        Text = addedText,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 14.000,
        TextStrokeColor3 = Color3.fromRGB(255, 255, 255),
        TextWrapped = true,
        TextXAlignment = Enum.TextXAlignment.Left
    })

    -- Function to update the added text
    local function UpdateAddedText(newText)
        Aadido.Text = newText or Aadido.Text
    end

    -- Return the UpdateAddedText function to allow external updates
    return UpdateAddedText
end
---addddd
function AddColorPicker(parent, Configs)
    local name = Configs.Name or "Color Picker"
    local Default = Configs.Default or Color3.fromRGB(0, 0, 200)
    local Callback = Configs.Callback or function() end
    local ColorH, ColorS, ColorV = 1, 1, 1
    Callback(Default)

    local TextButton = Create("Frame", parent, {
        Size = UDim2.new(1, 0, 0, 25),
        BackgroundColor3 = Configs_HUB.Cor_Options,
    })Corner(TextButton)

    local click = Create("TextButton", TextButton, {
        Size = UDim2.new(1, 0, 0, 25),
        BackgroundTransparency = 1,
        AutoButtonColor = false,
        Text = ""
    })

    local TextLabel = Create("TextLabel", TextButton, {
        Size = UDim2.new(1, -10, 0, 25),
        Position = UDim2.new(0, 35, 0, 0),
        TextSize = 12,
        TextColor3 = Configs_HUB.Cor_Text,
        TextXAlignment = "Left",
        Text = name,
        Font = Configs_HUB.Text_Font,
        BackgroundTransparency = 1
    })

    local picker = Create("Frame", TextButton, {
        Size = UDim2.new(0, 20, 0, 20),
        Position = UDim2.new(0, 5, 0, 2.5),
        BackgroundColor3 = Default
    })Corner(picker)Stroke(picker)

    local UI_Grade = Create("ImageButton", TextButton, {
        Size = UDim2.new(1, -100, 1, tonumber(-TextButton.Size.Y.Offset - 20)),
        Position = UDim2.new(0, 10, 0, tonumber(TextButton.Size.Y.Offset + 12.5)),
        Visible = false,
        Image = "rbxassetid://4155801252"
    })Corner(UI_Grade)Stroke(UI_Grade)local SavePos = Create("Frame", UI_Grade, {Visible = false})

    local grade = Create("TextButton", TextButton, {
        Size = UDim2.new(0, 30, 1, tonumber(-TextButton.Size.Y.Offset - 20)),
        Position = UDim2.new(1, -10, 0, tonumber(TextButton.Size.Y.Offset + 12.5)),
        AnchorPoint = Vector2.new(1, 0),
        Visible = false,
        Text = ""
    })Corner(grade)Stroke(grade)Create("UIGradient", grade, {
        Rotation = 90,
        Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 4)),
            ColorSequenceKeypoint.new(0.20, Color3.fromRGB(234, 255, 0)),
            ColorSequenceKeypoint.new(0.40, Color3.fromRGB(21, 255, 0)),
            ColorSequenceKeypoint.new(0.60, Color3.fromRGB(0, 255, 255)),
            ColorSequenceKeypoint.new(0.80, Color3.fromRGB(0, 17, 255)),
            ColorSequenceKeypoint.new(0.90, Color3.fromRGB(255, 0, 251)),
            ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 4))
        })
    })local SavePos2 = Create("Frame", grade, {Visible = false, Size = UDim2.new(1, 0, 0, 0)})

    local A_1 = Create("Frame", TextButton, {
        Size = UDim2.new(1, 0, 0, 0),
        Position = UDim2.new(0, 0, 0, 30),
        BackgroundTransparency = 1,
        Visible = false
    })

    local Select1 = Create("Frame", grade, {
        Size = UDim2.new(1, 0, 0, 10),
        Position = UDim2.new(0, 0, 0, select(3, Color3.toHSV(Default))),
        BackgroundTransparency = 1,
        Active = true,
        Draggable = true
    })Corner(Select1, {CornerRadius = UDim.new(2, 0)})Stroke(Select1, {Color = Color3.fromRGB(255, 255, 255)})

    local Select2 = Create("Frame", UI_Grade, {
        Size = UDim2.new(0, 15, 0, 15),
        Position = UDim2.new(0, select(2, Color3.toHSV(Default)), 0, select(1, Color3.toHSV(Default))),
        BackgroundTransparency = 1,
        Active = true,
        Draggable = true
    })Corner(Select2, {CornerRadius = UDim.new(2, 0)})Stroke(Select2, {Color = Color3.fromRGB(255, 255, 255)})

    UI_Grade.MouseButton1Click:Connect(function()
        local mouse = UserInputService:GetMouseLocation()
        local savepos = SavePos.AbsolutePosition
        CreateTween(Select2, "Position", UDim2.new(0, mouse.X - savepos.X, 0, tonumber(mouse.Y - savepos.Y) - 35), 0.3, false)
    end)

    grade.MouseButton1Click:Connect(function()
        local mouse = UserInputService:GetMouseLocation().Y - 35
        local savepos = SavePos2.AbsolutePosition.Y
        CreateTween(Select1, "Position", UDim2.new(0, 0, 0, mouse - savepos), 0.3, false)
    end)

    local function callback()
        Callback(Color3.fromHSV(ColorH, ColorS, ColorV))
    end

    local function updcolorpicker()
        ColorH = tonumber(Select1.Position.Y.Offset) / 80
        ColorS = tonumber(215 - Select2.Position.X.Offset) / 215
        ColorV = tonumber(75 - Select2.Position.Y.Offset) / 75
        UI_Grade.ImageColor3 = Color3.fromHSV(ColorH, 1, 1)
        picker.BackgroundColor3 = Color3.fromHSV(ColorH, ColorS, ColorV)
        callback()
    end

    updcolorpicker()

    Select1.Changed:Connect(function(prop)
        if prop == "Position" then
            Select1.Position = UDim2.new(0, 0, 0, math.clamp(Select1.Position.Y.Offset, 0, 80))
            updcolorpicker()
        end
    end)

    Select2.Changed:Connect(function(prop)
        if prop == "Position" then
            Select2.Position = UDim2.new(0, math.clamp(Select2.Position.X.Offset, 0, 222), 0, math.clamp(Select2.Position.Y.Offset, 0, 75))
            updcolorpicker()
        end
    end)

    TextButton.Changed:Connect(function(prop)
        if prop == "Size" then
            if TextButton.Size.Y.Offset >= 60 then
                picker.Position = UDim2.new(0, 5, 0, 5)
                UI_Grade.Visible = true
                A_1.Visible = true
                grade.Visible = true
            else
                picker.Position = UDim2.new(0, 5, 0, 2.5)
                UI_Grade.Visible = false
                A_1.Visible = false
                grade.Visible = false
            end
            -- Resize the parent container
            if parent then
                local newHeight = CalculateContainerHeight(parent)
                parent:TweenSize(UDim2.new(1, 0, 0, newHeight), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.3, true)
            end
        end
    end)

    local onoff = false
    click.MouseButton1Click:Connect(function()
        onoff = not onoff
        if onoff == true then
            local tween = TweenService:Create(TextButton, TweenInfo.new(0.2, Enum.EasingStyle.Linear),
                {Size = UDim2.new(1, 0, 0, 140)})tween:play()tween.Completed:Wait()
        else
            local tween = TweenService:Create(TextButton, TweenInfo.new(0.2, Enum.EasingStyle.Linear),
                {Size = UDim2.new(1, 0, 0, 25)})tween:play()tween.Completed:Wait()
        end
    end)
end

function CalculateContainerHeight(container)
    local totalHeight = 0
    for _, child in ipairs(container:GetChildren()) do
        if child:IsA("GuiObject") then
            totalHeight = totalHeight + child.Size.Y.Offset
        end
    end
    return totalHeight + 10 -- Adding padding
end

------ADADDD
function AddDiscord(parent, Configs)
    local DiscordLink = Configs[1] or Configs.DiscordLink or "https://discord.gg/"
    local DiscordIcon = Configs[2] or Configs.DiscordIcon or "rbxassetid://"
    local DiscordTitle = Configs[3] or Configs.DiscordTitle or ""

    local Frame = Create("Frame", parent, {
        Size = UDim2.new(1, 0, 0, 110),
        BackgroundColor3 = Color3.fromRGB(30, 30, 30),
        Name = "Frame",
        AutomaticSize = Enum.AutomaticSize.Y,
        BorderSizePixel = 0
    })

    local LinkLabel = Create("TextLabel", Frame, {
        Size = UDim2.new(1, 0, 0, 25),
        Text = DiscordLink,
        TextXAlignment = Enum.TextXAlignment.Left,
        BackgroundTransparency = 1,
        Position = UDim2.new(0, 12, 0, 0),
        TextColor3 = Color3.fromRGB(0, 120, 255),
        Font = Enum.Font.GothamBold,
        TextSize = 14
    })

    local TitleLabel = Create("TextLabel", Frame, {
        Size = UDim2.new(1, 0, 0, 25),
        Text = DiscordTitle,
        TextXAlignment = Enum.TextXAlignment.Left,
        BackgroundTransparency = 1,
        Position = UDim2.new(0, 60, 0, 25),
        TextColor3 = Color3.fromRGB(200, 200, 200),
        Font = Enum.Font.GothamBold,
        TextSize = 14
    })

    local IconLabel = Create("ImageLabel", Frame, {
        Size = UDim2.new(0, 40, 0, 40),
        AnchorPoint = Vector2.new(0, 0.5),
        Position = UDim2.new(0, 12, 0.45, 0),
        Image = DiscordIcon
    })
    Corner(IconLabel)

    local JoinButton = Create("TextButton", Frame, {
        Size = UDim2.new(1, -24, 0, 25),
        AnchorPoint = Vector2.new(0.5, 1),
        Position = UDim2.new(0.5, 0, 1, -8),
        Text = "Join",
        Font = Enum.Font.GothamBold,
        TextSize = 15,
        TextColor3 = Color3.fromRGB(220, 220, 220),
        BackgroundColor3 = Color3.fromRGB(50, 200, 50)
    })
    Corner(JoinButton)

    local time = tick()
    local ClickCounter = 0
    JoinButton.MouseButton1Click:Connect(function()
        if ClickCounter == 0 or tick() - time > 5 then
            time = tick()
            setclipboard(DiscordLink)
            ClickCounter = ClickCounter + 1
            JoinButton.Text = "Copied to Clipboard"
            JoinButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
            JoinButton.TextColor3 = Color3.fromRGB(150, 150, 150)
            task.wait(5)
            JoinButton.Text = "Join"
            JoinButton.BackgroundColor3 = Color3.fromRGB(50, 200, 50)
            JoinButton.TextColor3 = Color3.fromRGB(220, 220, 220)
        end
    end)
end
-----------------------------------------------------------------------------AddSlider
function AddSlider(parent, Configs)
    local SliderName = Configs.Name or "Slider"
    local Default = Configs.Default or 0
    local MinValue = Configs.Min or 0
    local MaxValue = Configs.Max or 100
    local Callback = Configs.Callback or function() end

    -- Create the main slider frame
    local SliderFrame = Create("Frame", parent, {
        Size = UDim2.new(1, 0, 0, 25),
        BackgroundTransparency = 1
    })

    -- Create the label for the slider
    local SliderLabel = Create("TextLabel", SliderFrame, {
        Size = UDim2.new(1, -50, 0, 25),
        Position = UDim2.new(0, 10, 0, 0),
        BackgroundTransparency = 1,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = SliderName .. ": " .. Default,
        TextXAlignment = Enum.TextXAlignment.Left,
        Font = Configs_HUB.Text_Font,
        TextSize = 14
    })

    -- Create the slider track
    local Track = Create("Frame", SliderFrame, {
        Size = UDim2.new(1, -150, 0, 5),
        Position = UDim2.new(0, 142, 0.5, 0),
        AnchorPoint = Vector2.new(0, 0.5),
        BackgroundColor3 = Configs_HUB.Cor_Options
    })Corner(Track)

    -- Create the slider thumb
    local Thumb = Create("ImageButton", Track, {
        Size = UDim2.new(0, 15, 1, 15),
        Position = UDim2.new(0, 0, 0.5, 0),
        AnchorPoint = Vector2.new(0.5, 0.5),
        BackgroundColor3 = Configs_HUB.Cor_Stroke,
        AutoButtonColor = false,
        Image = ""
    })Corner(Thumb)

    -- Update slider position and callback
    local function UpdateSlider(input)
        local scale = (input.Position.X - Track.AbsolutePosition.X) / Track.AbsoluteSize.X
        scale = math.clamp(scale, 0, 1)
        local value = math.floor(MinValue + scale * (MaxValue - MinValue))
        Thumb.Position = UDim2.new(scale, 0, 0.5, 0)
        SliderLabel.Text = SliderName .. ": " .. value
        Callback(value)
    end

    -- Handle dragging
    local dragging = false
    Thumb.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)

    Thumb.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            UpdateSlider(input)
        end
    end)

    -- Set initial position
    local initialScale = (Default - MinValue) / (MaxValue - MinValue)
    Thumb.Position = UDim2.new(initialScale, 0, 0.5, 0)
    SliderLabel.Text = SliderName .. ": " .. Default
    Callback(Default)

    return SliderFrame
end
-----------------------------------------------------------------------------AddKeyBind
function AddKeybind(parent, Configs)
    local KeybindName = Configs.Name or "Keybind"
    local Default = Configs.Default or Enum.KeyCode.F
    local Callback = Configs.Callback or function() end

    -- Create the main frame for the keybind
    local KeybindFrame = Create("Frame", parent, {
        Size = UDim2.new(1, 0, 0, 25),
		BackgroundColor3 = Configs_HUB.Cor_Options,
        BackgroundTransparency = 0,
		BorderSizePixel = 0
    })Corner(KeybindFrame)

    -- Create the label for the keybind
    local KeybindLabel = Create("TextLabel", KeybindFrame, {
        Size = UDim2.new(1, -50, 0, 25),
        Position = UDim2.new(0, 10, 0, 0),
        BackgroundTransparency = 1,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = KeybindName .. ": " .. Default.Name,
        TextXAlignment = Enum.TextXAlignment.Left,
        Font = Configs_HUB.Text_Font,
        TextSize = 14
    })

    -- Create the button to set the keybind
    local KeybindButton = Create("TextButton", KeybindFrame, {
        Size = UDim2.new(1, -180, 0, 22),
        Position = UDim2.new(0, 180, 0.5, -10),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = Default.Name,
        Font = Configs_HUB.Text_Font,
        TextSize = 14
    })Corner(KeybindButton)Stroke(KeybindButton)

    -- Function to update the keybind
    local function UpdateKeybind(newKey)
        KeybindLabel.Text = KeybindName .. ": " .. newKey.Name
        KeybindButton.Text = newKey.Name
        Callback(newKey)
    end

    -- Set initial keybind
    UpdateKeybind(Default)

    -- Handle keybind button click
    KeybindButton.MouseButton1Click:Connect(function()
        KeybindButton.Text = "Press a key..."
        local connection
        connection = UserInputService.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.Keyboard then
                UpdateKeybind(input.KeyCode)
                connection:Disconnect()
            end
        end)
    end)

    -- Detect key press
    UserInputService.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Default then
            Callback(input.KeyCode)
        end
    end)

    return KeybindFrame
end
-----------------------------------------------------------------------------AddTextBox
function AddTextBox(parent, Configs)
    local TextBoxName = Configs.Name or "TextBox"
    local Default = Configs.Default or ""
    local Placeholder = Configs.Placeholder or ""
    local Callback = Configs.Callback or function() end

    -- Create the main frame for the text box
    local TextBoxFrame = Create("Frame", parent, {
        Size = UDim2.new(1, 0, 0, 25),
		BackgroundColor3 = Configs_HUB.Cor_Options,
        BackgroundTransparency = 0,
		BorderSizePixel = 0
    })Corner(TextBoxFrame)

    -- Create the label for the text box
    local TextBoxLabel = Create("TextLabel", TextBoxFrame, {
        Size = UDim2.new(1, -20, 0, 25),
        Position = UDim2.new(0, 10, 0, 0),
        BackgroundTransparency = 1,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = TextBoxName,
        TextXAlignment = Enum.TextXAlignment.Left,
        Font = Configs_HUB.Text_Font,
        TextSize = 14
    })

    -- Create the text box
    local TextBox = Create("TextBox", TextBoxFrame, {
        Size = UDim2.new(1, -180, 0, 22),
        Position = UDim2.new(0, 180, 0.5, -10),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        TextColor3 = Configs_HUB.Cor_Text,
        PlaceholderText = Placeholder,
        Text = Default,
        Font = Configs_HUB.Text_Font,
        TextSize = 14
    })Corner(TextBox)Stroke(TextBox)

    -- Callback for when the text is changed
    TextBox.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            Callback(TextBox.Text)
        end
    end)

    -- Set initial text
    Callback(Default)

    return TextBoxFrame
end
-----------------------------------------------------------------------------AddButton
function AddButton(parent, Configs)
    local ButtonName = Configs.Name or "Button"
    local Callback = Configs.Callback or function() end

    -- Create the main frame for the button
    local ButtonFrame = Create("Frame", parent, {
        Size = UDim2.new(1, 0, 0, 25),
        BackgroundTransparency = 1
    })

    -- Create the label for the button
    local ButtonLabel = Create("TextLabel", ButtonFrame, {
        Size = UDim2.new(1, -20, 0, 25),
        Position = UDim2.new(0, 10, 0, 0),
        BackgroundTransparency = 1,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = ButtonName,
        TextXAlignment = Enum.TextXAlignment.Left,
        Font = Configs_HUB.Text_Font,
        TextSize = 14
    })

    -- Create the button
    local Button = Create("TextButton", ButtonFrame, {
        Size = UDim2.new(1, -80, 0, 23),
        Position = UDim2.new(0, 80, 0, 0),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = ButtonName,
        Font = Configs_HUB.Text_Font,
        TextSize = 14,
        AutoButtonColor = true
    })Corner(Button)Stroke(Button)

    -- Handle button click
    Button.MouseButton1Click:Connect(function()
        Callback()
    end)

    return ButtonFrame
end
-----------------------------------------------------------------------------AddDropdown
function AddDropdown(parent, Configs)
    local DropdownName = Configs.Name or "Dropdown"
    local Options = Configs.Options or {}
    local Default = Configs.Default or Options[1]
    local Callback = Configs.Callback or function() end

    -- Create the main frame for the dropdown
    local DropdownFrame = Create("Frame", parent, {
        Size = UDim2.new(1, 0, 0, 50),
        BackgroundTransparency = 1
    })

    -- Create the label for the dropdown
    local DropdownLabel = Create("TextLabel", DropdownFrame, {
        Size = UDim2.new(1, -50, 0, 25),
        Position = UDim2.new(0, 10, 0, 0),
        BackgroundTransparency = 1,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = DropdownName,
        TextXAlignment = Enum.TextXAlignment.Left,
        Font = Configs_HUB.Text_Font,
        TextSize = 14
    })

    -- Create the button to open the dropdown menu
    local DropdownButton = Create("TextButton", DropdownFrame, {
        Size = UDim2.new(1, -20, 0, 25),
        Position = UDim2.new(0, 10, 0, 25),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = Default,
        Font = Configs_HUB.Text_Font,
        TextSize = 14,
        AutoButtonColor = false
    })Corner(DropdownButton)Stroke(DropdownButton)

    -- Create the dropdown menu
    local DropdownMenu = Create("Frame", DropdownFrame, {
        Size = UDim2.new(1, -20, 0, #Options * 25),
        Position = UDim2.new(0, 10, 0, 55),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        Visible = false,
        ClipsDescendants = true
    })Corner(DropdownMenu)Stroke(DropdownMenu)

    local UIListLayout = Create("UIListLayout", DropdownMenu, {
        SortOrder = Enum.SortOrder.LayoutOrder
    })

    -- Function to update dropdown selection
    local function UpdateSelection(selectedOption)
        DropdownButton.Text = selectedOption
        DropdownMenu.Visible = false
        Callback(selectedOption)
    end

    -- Add options to the dropdown menu
    for _, option in ipairs(Options) do
        local OptionButton = Create("TextButton", DropdownMenu, {
            Size = UDim2.new(1, 0, 0, 25),
            BackgroundColor3 = Configs_HUB.Cor_Options,
            TextColor3 = Configs_HUB.Cor_Text,
            Text = option,
            Font = Configs_HUB.Text_Font,
            TextSize = 14,
            AutoButtonColor = false
        })Corner(OptionButton)Stroke(OptionButton)

        OptionButton.MouseButton1Click:Connect(function()
            UpdateSelection(option)
        end)
    end

    -- Handle dropdown button click
    DropdownButton.MouseButton1Click:Connect(function()
        DropdownMenu.Visible = not DropdownMenu.Visible
    end)

    -- Set initial selection
    UpdateSelection(Default)

    return DropdownFrame
end
-----------------------------------------------------------------------------AddContainer
local TweenService = game:GetService("TweenService")

function AddContainer(parent, Configs)
    local ContainerName = Configs.Name or "Container"
    local Components = Configs.Components or {}

    -- Create the main frame for the container
    local ContainerFrame = Create("Frame", parent, {
        Size = UDim2.new(1, 0, 0, 25),
        BackgroundColor3 = Color3.fromRGB(32, 32, 32),
        BackgroundTransparency = 0
    })Corner(ContainerFrame)

    -- Create the button to open the container menu
    local ContainerButton = Create("TextButton", ContainerFrame, {
        Size = UDim2.new(1, 0, 0, 25),
        Position = UDim2.new(0, 10, 0, 0),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = ContainerName,
        Font = Configs_HUB.Text_Font,
        TextSize = 14,
        AutoButtonColor = false
    })Corner(ContainerButton)

    -- Create a UIListLayout to organize the components
    local UIListLayout = Create("UIListLayout", ContainerFrame, {
        SortOrder = Enum.SortOrder.LayoutOrder,
        Padding = UDim.new(0, 5)
    })

    -- Function to add a component to the container
    local function AddComponent(component)
        if component.Type == "Button" then
            AddButton(ContainerFrame, component)
        elseif component.Type == "Slider" then
            AddSlider(ContainerFrame, component)
        elseif component.Type == "Toggle" then
            AddToggle(ContainerFrame, component)
        elseif component.Type == "ColorPicker" then
            AddColorPicker(ContainerFrame, component)
        elseif component.Type == "Dropdown" then
            AddDropdown(ContainerFrame, component)
        elseif component.Type == "TextBox" then
            AddTextBox(ContainerFrame, component)
        elseif component.Type == "Keybind" then
            AddKeybind(ContainerFrame, component)
        end
    end

    -- Add all components to the container
    for _, component in ipairs(Components) do
        AddComponent(component)
    end

    -- Function to toggle visibility of components
    local function ToggleComponentsVisibility(visible)
        for _, child in ipairs(ContainerFrame:GetChildren()) do
            if child:IsA("GuiObject") and child ~= ContainerButton and child ~= UIListLayout then
                child.Visible = visible
            end
        end
    end

    -- Calculate the height of the container based on the components
    local function CalculateContainerHeight()
        local totalHeight = ContainerButton.Size.Y.Offset + 10 -- Start with button height
        for _, child in ipairs(ContainerFrame:GetChildren()) do
            if child:IsA("GuiObject") and child ~= ContainerButton and child ~= UIListLayout then
                totalHeight = totalHeight + child.Size.Y.Offset + UIListLayout.Padding.Offset
            end
        end
        return totalHeight
    end

    -- Handle container button click
    ContainerButton.MouseButton1Click:Connect(function()
        local isOpen = ContainerFrame.Size.Y.Offset > 50
        if isOpen then
            ToggleComponentsVisibility(false)
            local tween = TweenService:Create(ContainerFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = UDim2.new(1, 0, 0, 25)})
            tween:Play()
        else
            local newHeight = CalculateContainerHeight()
            local tween = TweenService:Create(ContainerFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = UDim2.new(1, 0, 0, newHeight)})
            tween:Play()
            tween.Completed:Connect(function()
                ToggleComponentsVisibility(true)
            end)
        end
    end)

    -- Initially hide all components
    ToggleComponentsVisibility(false)

    return ContainerFrame
end
