-- Configuration
local Configs_HUB = {
    Cor_Hub = Color3.fromRGB(20, 19, 21),
    Cor_Options = Color3.fromRGB(26, 26, 26),
    Cor_Stroke = Color3.fromRGB(60, 60, 60),
    Cor_Text = Color3.fromRGB(240, 240, 240),
    Cor_DarkText = Color3.fromRGB(140, 140, 140),
    Corner_Radius = UDim.new(0, 4),
    Text_Font = Enum.Font.FredokaOne,
    Selected_Tab_Color = Color3.fromRGB(124, 197, 185)
}

-- Services
local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Utility Functions
local function Create(instance, parent, props)
    local new = Instance.new(instance, parent)
    if props then
        for prop, value in pairs(props) do
            new[prop] = value
        end
    end
    return new
end

local function SetProps(instance, props)
    if instance and props then
        for prop, value in pairs(props) do
            instance[prop] = value
        end
    end
    return instance
end

local function Corner(parent, props)
    local new = Create("UICorner", parent)
    new.CornerRadius = Configs_HUB.Corner_Radius
    if props then
        SetProps(new, props)
    end
    return new
end

local function Stroke(parent, props)
    local new = Create("UIStroke", parent)
    new.Color = Configs_HUB.Cor_Stroke
    new.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    if props then
        SetProps(new, props)
    end
    return new
end

local function CreateTween(instance, prop, value, time, tweenWait)
    local tween = TweenService:Create(instance,
        TweenInfo.new(time, Enum.EasingStyle.Linear),
        {[prop] = value})
    tween:Play()
    if tweenWait then
        tween.Completed:Wait()
    end
end

-- Main GUI Elements
local ScreenGui = Create("ScreenGui", CoreGui, {
    Name = "Custom GUI"
})

local Menu = Create("Frame", ScreenGui, {
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    Position = UDim2.new(0.241, 0, 0.153, 0),
    Size = UDim2.new(0, 550, 0, 350)
})Corner(Menu)

local ScrollBar = Create("ScrollingFrame", Menu, {
    Active = true,
    AnchorPoint = Vector2.new(0, 1),
    BackgroundTransparency = 1,
    Position = UDim2.new(0, 0, 1, 0),
    Size = UDim2.new(0, 150, 0, 324),
    CanvasSize = UDim2.new(0, 0, 0, 0),
    ScrollBarThickness = 2,
    ScrollingDirection = Enum.ScrollingDirection.Y
})Create("UIPadding", ScrollBar, {
    PaddingBottom = UDim.new(0, 10),
    PaddingLeft = UDim.new(0, 10),
    PaddingRight = UDim.new(0, 10),
    PaddingTop = UDim.new(0, 10)
})Create("UIGridLayout", ScrollBar, {
    CellSize = UDim2.new(0, 130, 0, 35),
    CellPadding = UDim2.new(0, 10, 0, 10),
    FillDirection = Enum.FillDirection.Horizontal,
    SortOrder = Enum.SortOrder.LayoutOrder
})

local TopBar = Create("Frame", Menu, {
    BackgroundTransparency = 1,
    Size = UDim2.new(1, 0, 0, 25)
})

local ButtonsFrame = Create("Frame", TopBar, {
    AnchorPoint = Vector2.new(1, 0),
    BackgroundTransparency = 1,
    Position = UDim2.new(1, -5, 0, 0),
    Size = UDim2.new(0, 40, 1, -5)
})

local Minimize_BTN = Create("TextButton", ButtonsFrame, {
    BackgroundTransparency = 1,
    Size = UDim2.new(0.5, 0, 1, 0),
    Font = Configs_HUB.Text_Font,
    Text = "-",
    TextColor3 = Configs_HUB.Cor_Text,
    TextSize = 25,
    TextWrapped = true,
    TextYAlignment = Enum.TextYAlignment.Bottom
})

local Close_Button = Create("TextButton", ButtonsFrame, {
    AnchorPoint = Vector2.new(1, 0),
    BackgroundTransparency = 1,
    Size = UDim2.new(0.5, 0, 1, 0),
    Position = UDim2.new(1, 0, 0, 0),
    Font = Configs_HUB.Text_Font,
    Text = "Ã—",
    TextColor3 = Configs_HUB.Cor_Text,
    TextSize = 25,
    TextWrapped = true,
    TextYAlignment = Enum.TextYAlignment.Bottom
})

local Title = Create("TextLabel", TopBar, {
    BackgroundTransparency = 1,
    Position = UDim2.new(0, 0, 0, 0),
    Size = UDim2.new(0.27, 0, 1, 0),
    Font = Configs_HUB.Text_Font,
    Text = "Sundare",
    TextColor3 = Color3.fromRGB(124, 197, 185),
    TextSize = 22,
    TextWrapped = true
})

local Containers = Create("Frame", Menu, {
    AnchorPoint = Vector2.new(1, 1),
    BackgroundTransparency = 1,
    Position = UDim2.new(1, 0, 1, 0),
    Size = UDim2.new(0, 400, 0, 324)
})Corner(Containers)

-- Functionality for Close and Minimize Buttons
local IsMinimized = false
Minimize_BTN.MouseButton1Click:Connect(function()
    if IsMinimized then
        IsMinimized = false
        Minimize_BTN.Text = "-"
        Menu.Size = UDim2.new(0, 550, 0, 350)
        ScrollBar.Visible = true
        Containers.Visible = true
    else
        IsMinimized = true
        Minimize_BTN.Text = "+"
        ScrollBar.Visible = false
        Containers.Visible = false
        CreateTween(Menu, "Size", UDim2.new(0, 550, 0, 25), 0.15, false)
    end
end)

Close_Button.MouseButton1Click:Connect(function()
    -- Hide elements before closing to avoid moving them
    ScrollBar.Visible = false
    Containers.Visible = false
    CreateTween(Menu, "Size", UDim2.new(0, 0, 0, 0), 0.3, true)
    task.wait(0.3)  -- Wait for the tween to complete
    ScreenGui:Destroy()
end)

-- Make the GUI Draggable
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    Menu.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

Menu.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = Menu.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

Menu.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Function to Create Tabs
local firstTab = true
local activeTab = nil

local function MakeTab(Configs)
    local TabName = Configs.Name or "Tab"
    local TabTitle = Configs.TabTitle or false

    local Tab = Create("TextButton", ScrollBar, {
        Size = UDim2.new(0, 130, 0, 35),
        BackgroundColor3 = Color3.fromRGB(34, 33, 36),
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0,
        Text = "",
        Font = Configs_HUB.Text_Font,
        TextColor3 = Configs_HUB.Cor_Text,
        TextSize = 14
    })

    local Frame = Create("Frame", Tab, {
        Size = UDim2.new(0, 4, 0, 35),
        BackgroundColor3 = Color3.fromRGB(124, 197, 185),
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0
    })

    local Circle = Create("Frame", Tab, {
        Size = UDim2.new(0, 26, 0, 26),
        Position = UDim2.new(0.056, 0, 0.114, 0),
        BackgroundColor3 = Color3.fromRGB(42, 42, 42),
        BorderColor3 = Color3.fromRGB(0, 0, 0),
        BorderSizePixel = 0
    })
    Create("UICorner", Circle, {
        CornerRadius = UDim.new(0, 100)
    })

    local Name = Create("TextLabel", Tab, {
        Size = UDim2.new(0, 89, 0, 26),
        Position = UDim2.new(0.308, 0, 0.114, 0),
        BackgroundTransparency = 1,
        Text = TabName,
        Font = Enum.Font.FredokaOne,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 14,
        TextXAlignment = Enum.TextXAlignment.Left
    })

    Create("UICorner", Tab, {
        CornerRadius = UDim.new(0, 6)
    })

    local Container = Create("ScrollingFrame", Containers, {
        Size = UDim2.new(1, 0, 1, 0),
        ScrollingDirection = "Y",
        AutomaticCanvasSize = "Y",
        CanvasSize = UDim2.new(),
        BackgroundTransparency = 1,
        ScrollBarThickness = 2,
        Visible = false
    })
    Create("UIPadding", Container, {
        PaddingLeft = UDim.new(0, 10),
        PaddingRight = UDim.new(0, 10),
        PaddingTop = UDim.new(0, 10),
        PaddingBottom = UDim.new(0, 10)
    })
    Create("UIListLayout", Container, {
        Padding = UDim.new(0, 5),
        HorizontalAlignment = Enum.HorizontalAlignment.Center
    })

    Tab.MouseButton1Click:Connect(function()
        if activeTab then
            CreateTween(activeTab, "BackgroundColor3", Color3.fromRGB(34, 33, 36), 0.3, false)
        end
        CreateTween(Tab, "BackgroundColor3", Configs_HUB.Selected_Tab_Color, 0.3, false)
        activeTab = Tab
        
        for _, container in pairs(Containers:GetChildren()) do
            if container:IsA("ScrollingFrame") then
                container.Visible = false
            end
        end
        for _, frame in pairs(ScrollBar:GetChildren()) do
            if frame:IsA("TextButton") and frame:FindFirstChild("Name") and frame.Name ~= Name then
                CreateTween(frame.Name, "TextColor3", Configs_HUB.Cor_DarkText, 0.3, false)
                frame.Name.TextSize = 14
            end
        end
        Container.Visible = true
        CreateTween(Name, "TextColor3", Configs_HUB.Cor_Text, 0.3, false)
        Name.TextSize = 15
    end)

    -- Show the first tab by default
    if firstTab then
        Container.Visible = true
        CreateTween(Tab, "BackgroundColor3", Configs_HUB.Selected_Tab_Color, 0.3, false)
        firstTab = false
        activeTab = Tab
    end

    return Container
end
